2020-08-21 13:02:03 =ERROR REPORT====
** Generic server <0.552.0> terminating 
** Last message in was {'Elixir.Phoenix.Channel',#{<<"flash">> => nil,<<"params">> => #{<<"_csrf_token">> => <<"cnZ3MAoCA2d-YTs_HwQbEy9Tfx4PIys8ECBSPteWH6nFsIxIkg5feeXi">>,<<"_mounts">> => 1,<<"_track_static">> => [<<"http://localhost:4000/css/app.css">>,<<"http://localhost:4000/js/app.js">>]},<<"session">> => <<"SFMyNTY.g2gDaAJhBHQAAAAHZAACaWRtAAAAFHBoeC1GaTFHeFQ3aENOaGIxZ0xpZAAKcGFyZW50X3BpZGQAA25pbGQACHJvb3RfcGlkZAADbmlsZAAJcm9vdF92aWV3ZAAfRWxpeGlyLkV4Y2hhbmdlQXBpV2ViLk9yZGVyTGl2ZWQABnJvdXRlcmQAHEVsaXhpci5FeGNoYW5nZUFwaVdlYi5Sb3V0ZXJkAAdzZXNzaW9udAAAAABkAAR2aWV3ZAAfRWxpeGlyLkV4Y2hhbmdlQXBpV2ViLk9yZGVyTGl2ZW4GANOr5BB0AWIAAVGA.Ms1XJmMNPItxfCaDzMNW3cwyCxwBAD1wZB53jXGNER8">>,<<"static">> => <<"SFMyNTY.g2gDaAJhBHQAAAADZAAKYXNzaWduX25ld2pkAAVmbGFzaHQAAAAAZAACaWRtAAAAFHBoeC1GaTFHeFQ3aENOaGIxZ0xpbgYA06vkEHQBYgABUYA.bQaDYGszYDHu39xXZFl1oV9W1XChMLxdDV1v0w6LI40">>,<<"url">> => <<"http://localhost:4000/home/ticker/AUXLND/order/25">>},{<0.547.0>,#Ref<0.1610720334.1810890754.177785>},#{'__struct__' => 'Elixir.Phoenix.Socket',assigns => #{},channel => 'Elixir.Phoenix.LiveView.Channel',channel_pid => nil,endpoint => 'Elixir.ExchangeApiWeb.Endpoint',handler => 'Elixir.Phoenix.LiveView.Socket',id => nil,join_ref => <<"5">>,joined => false,private => #{connect_info => #{session => #{<<"_csrf_token">> => <<"755cZvf06WUylMcZD4JxjFsU">>}}},pubsub_server => 'Elixir.ExchangeApi.PubSub',ref => nil,serializer => 'Elixir.Phoenix.Socket.V2.JSONSerializer',topic => <<"lv:phx-Fi1GxT7hCNhb1gLi">>,transport => websocket,transport_pid => <0.547.0>}}
** When Server state == #Ref<0.1610720334.1810890754.177790>
** Reason for termination ==
** {#{'__exception__' => true,'__struct__' => 'Elixir.UndefinedFunctionError',arity => 0,function => order_id,message => nil,module => nil,reason => nil},[{nil,order_id,[],[]},{'Elixir.ExchangeApiWeb.OrderLive','-render/1-fun-0-',2,[{file,"lib/exchange_api_web/live/order_live.html.leex"},{line,2}]},{'Elixir.Phoenix.LiveView.Diff',traverse,5,[{file,"lib/phoenix_live_view/diff.ex"},{line,250}]},{'Elixir.Phoenix.LiveView.Diff','-traverse_dynamic/5-fun-0-',3,[{file,"lib/phoenix_live_view/diff.ex"},{line,321}]},{'Elixir.Enum','-reduce/3-lists^foldl/2-0-',3,[{file,"lib/enum.ex"},{line,2111}]},{'Elixir.Phoenix.LiveView.Diff',traverse,5,[{file,"lib/phoenix_live_view/diff.ex"},{line,250}]},{'Elixir.Phoenix.LiveView.Diff',render,3,[{file,"lib/phoenix_live_view/diff.ex"},{line,97}]},{'Elixir.Phoenix.LiveView.Channel',render_diff,2,[{file,"lib/phoenix_live_view/channel.ex"},{line,517}]},{'Elixir.Phoenix.LiveView.Channel',maybe_call_mount_handle_params,4,[{file,"lib/phoenix_live_view/channel.ex"},{line,212}]},{'Elixir.Phoenix.LiveView.Channel',verified_mount,5,[{file,"lib/phoenix_live_view/channel.ex"},{line,670}]},{'Elixir.Phoenix.LiveView.Channel',handle_info,2,[{file,"lib/phoenix_live_view/channel.ex"},{line,43}]},{gen_server,try_dispatch,4,[{file,"gen_server.erl"},{line,680}]},{gen_server,handle_msg,6,[{file,"gen_server.erl"},{line,756}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-21 13:02:03 =CRASH REPORT====
  crasher:
    initial call: Elixir.Phoenix.LiveView.Channel:init/1
    pid: <0.552.0>
    registered_name: []
    exception error: {#{'__exception__' => true,'__struct__' => 'Elixir.UndefinedFunctionError',arity => 0,function => order_id,message => nil,module => nil,reason => nil},[{nil,order_id,[],[]},{'Elixir.ExchangeApiWeb.OrderLive','-render/1-fun-0-',2,[{file,"lib/exchange_api_web/live/order_live.html.leex"},{line,2}]},{'Elixir.Phoenix.LiveView.Diff',traverse,5,[{file,"lib/phoenix_live_view/diff.ex"},{line,250}]},{'Elixir.Phoenix.LiveView.Diff','-traverse_dynamic/5-fun-0-',3,[{file,"lib/phoenix_live_view/diff.ex"},{line,321}]},{'Elixir.Enum','-reduce/3-lists^foldl/2-0-',3,[{file,"lib/enum.ex"},{line,2111}]},{'Elixir.Phoenix.LiveView.Diff',traverse,5,[{file,"lib/phoenix_live_view/diff.ex"},{line,250}]},{'Elixir.Phoenix.LiveView.Diff',render,3,[{file,"lib/phoenix_live_view/diff.ex"},{line,97}]},{'Elixir.Phoenix.LiveView.Channel',render_diff,2,[{file,"lib/phoenix_live_view/channel.ex"},{line,517}]},{'Elixir.Phoenix.LiveView.Channel',maybe_call_mount_handle_params,4,[{file,"lib/phoenix_live_view/channel.ex"},{line,212}]},{'Elixir.Phoenix.LiveView.Channel',verified_mount,5,[{file,"lib/phoenix_live_view/channel.ex"},{line,670}]},{'Elixir.Phoenix.LiveView.Channel',handle_info,2,[{file,"lib/phoenix_live_view/channel.ex"},{line,43}]},{gen_server,try_dispatch,4,[{file,"gen_server.erl"},{line,680}]},{gen_server,handle_msg,6,[{file,"gen_server.erl"},{line,756}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.432.0>,<0.431.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.416.0>]
    message_queue_len: 0
    messages: []
    links: [<0.432.0>]
    dictionary: [{plug_unmasked_csrf_token,<<"755cZvf06WUylMcZD4JxjFsU">>},{plug_csrf_token_per_host,#{secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>}},{'$callers',[<0.547.0>]}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 41708
  neighbours:
2020-08-21 13:02:03 =SUPERVISOR REPORT====
     Supervisor: {<0.432.0>,'Elixir.Supervisor.Default'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.UndefinedFunctionError',arity => 0,function => order_id,message => nil,module => nil,reason => nil},[{nil,order_id,[],[]},{'Elixir.ExchangeApiWeb.OrderLive','-render/1-fun-0-',2,[{file,"lib/exchange_api_web/live/order_live.html.leex"},{line,2}]},{'Elixir.Phoenix.LiveView.Diff',traverse,5,[{file,"lib/phoenix_live_view/diff.ex"},{line,250}]},{'Elixir.Phoenix.LiveView.Diff','-traverse_dynamic/5-fun-0-',3,[{file,"lib/phoenix_live_view/diff.ex"},{line,321}]},{'Elixir.Enum','-reduce/3-lists^foldl/2-0-',3,[{file,"lib/enum.ex"},{line,2111}]},{'Elixir.Phoenix.LiveView.Diff',traverse,5,[{file,"lib/phoenix_live_view/diff.ex"},{line,250}]},{'Elixir.Phoenix.LiveView.Diff',render,3,[{file,"lib/phoenix_live_view/diff.ex"},{line,97}]},{'Elixir.Phoenix.LiveView.Channel',render_diff,2,[{file,"lib/phoenix_live_view/channel.ex"},{line,517}]},{'Elixir.Phoenix.LiveView.Channel',maybe_call_mount_handle_params,4,[{file,"lib/phoenix_live_view/channel.ex"},{line,212}]},{'Elixir.Phoenix.LiveView.Channel',verified_mount,5,[{file,"lib/phoenix_live_view/channel.ex"},{line,670}]},{'Elixir.Phoenix.LiveView.Channel',handle_info,2,[{file,"lib/phoenix_live_view/channel.ex"},{line,43}]},{gen_server,try_dispatch,4,[{file,"gen_server.erl"},{line,680}]},{gen_server,handle_msg,6,[{file,"gen_server.erl"},{line,756}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.552.0>},{id,undefined},{mfargs,{'Elixir.Phoenix.LiveView.Channel',start_link,undefined}},{restart_type,temporary},{shutdown,5000},{child_type,worker}]

2020-08-21 13:05:56 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.590.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,binary_to_integer,[<<"10ER039584">>],[]},{'Elixir.ExchangeApiWeb.OrderLive',mount,3,[{file,"lib/exchange_api_web/live/order_live.ex"},{line,9}]},{'Elixir.Phoenix.LiveView.Utils','maybe_call_mount!',3,[{file,"lib/phoenix_live_view/utils.ex"},{line,256}]},{'Elixir.Phoenix.LiveView.Static','call_mount_and_handle_params!',5,[{file,"lib/phoenix_live_view/static.ex"},{line,302}]},{'Elixir.Phoenix.LiveView.Static',render,3,[{file,"lib/phoenix_live_view/static.ex"},{line,127}]},{'Elixir.Phoenix.LiveView.Controller',live_render,3,[{file,"lib/phoenix_live_view/controller.ex"},{line,35}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/marciateixeira/Desktop/Yari/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/marciateixeira/Desktop/Yari/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/marciateixeira/Desktop/Yari/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-US,en;q=0.9,pt;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYNzU1Y1p2ZjA2V1V5bE1jWkQ0SnhqRnNV.xqWEp_F8O6lRAwESXYrmlC0cI5rIuT73AUSDI-U34nc">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/home/ticker/AUXLND/order/10ER039584">>,path_info => undefined,peer => {{127,0,0,1},51270},pid => <0.557.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 8,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.590.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"home">>,<<"ticker">>,<<"AUXLND">>,<<"order">>,<<"10ER039584">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-US,en;q=0.9,pt;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYNzU1Y1p2ZjA2V1V5bE1jWkQ0SnhqRnNV.xqWEp_F8O6lRAwESXYrmlC0cI5rIuT73AUSDI-U34nc">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36">>}],request_path => <<"/home/ticker/AUXLND/order/10ER039584">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.557.0>,<0.452.0>,<0.451.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.426.0>]
    message_queue_len: 0
    messages: []
    links: [<0.557.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi1HC06k6YhHz4wAAABi">>}},{plug_csrf_token_per_host,#{secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 150943
  neighbours:
2020-08-21 13:05:56 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.557.0>, stream 8 had its request process <0.590.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,binary_to_integer,[<<"10ER039584">>],[]},{'Elixir.ExchangeApiWeb.OrderLive',mount,3,[{file,"lib/exchange_api_web/live/order_live.ex"},{line,9}]},{'Elixir.Phoenix.LiveView.Utils','maybe_call_mount!',3,[{file,"lib/phoenix_live_view/utils.ex"},{line,256}]},{'Elixir.Phoenix.LiveView.Static','call_mount_and_handle_params!',5,[{file,"lib/phoenix_live_view/static.ex"},{line,302}]},{'Elixir.Phoenix.LiveView.Static',render,3,[{file,"lib/phoenix_live_view/static.ex"},{line,127}]},{'Elixir.Phoenix.LiveView.Controller',live_render,3,[{file,"lib/phoenix_live_view/controller.ex"},{line,35}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/marciateixeira/Desktop/Yari/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/marciateixeira/Desktop/Yari/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/marciateixeira/Desktop/Yari/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-US,en;q=0.9,pt;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYNzU1Y1p2ZjA2V1V5bE1jWkQ0SnhqRnNV.xqWEp_F8O6lRAwESXYrmlC0cI5rIuT73AUSDI-U34nc">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/home/ticker/AUXLND/order/10ER039584">>,path_info => undefined,peer => {{127,0,0,1},51270},pid => <0.557.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 8,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.590.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"home">>,<<"ticker">>,<<"AUXLND">>,<<"order">>,<<"10ER039584">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-US,en;q=0.9,pt;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYNzU1Y1p2ZjA2V1V5bE1jWkQ0SnhqRnNV.xqWEp_F8O6lRAwESXYrmlC0cI5rIuT73AUSDI-U34nc">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36">>}],request_path => <<"/home/ticker/AUXLND/order/10ER039584">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:44:26 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.826.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"could not lookup Ecto repo ExchangeApi.Repo because it was not started or it does not exist">>},[{'Elixir.Ecto.Repo.Registry',lookup,1,[{file,"lib/ecto/repo/registry.ex"},{line,19}]},{'Elixir.Ecto.Repo.Schema',do_insert,4,[{file,"lib/ecto/repo/schema.ex"},{line,211}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,15}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"02679650-b4b9-4377-9162-d3d9e8241e9a">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60463},pid => <0.825.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.826.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"02679650-b4b9-4377-9162-d3d9e8241e9a">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.825.0>,<0.720.0>,<0.719.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.694.0>]
    message_queue_len: 0
    messages: []
    links: [<0.825.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7IOUitr1Dxf_MAAAwE">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 142055
  neighbours:
2020-08-26 10:44:26 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.825.0>, stream 1 had its request process <0.826.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"could not lookup Ecto repo ExchangeApi.Repo because it was not started or it does not exist">>},[{'Elixir.Ecto.Repo.Registry',lookup,1,[{file,"lib/ecto/repo/registry.ex"},{line,19}]},{'Elixir.Ecto.Repo.Schema',do_insert,4,[{file,"lib/ecto/repo/schema.ex"},{line,211}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,15}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"02679650-b4b9-4377-9162-d3d9e8241e9a">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60463},pid => <0.825.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.826.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"02679650-b4b9-4377-9162-d3d9e8241e9a">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:45:06 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.632.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Ecto.CastError',message => <<"expected params to be a map with atoms or string keys, got a map with mixed keys: %{:jwt => \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQzMDUsImlhdCI6MTU5ODQzNTEwNSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYThmMTc3M2UtMGFmYS00MTI3LWFkNmQtMmFiOTc3MmJmMGRjIiwibmJmIjoxNTk4NDM1MTA0LCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.1lR5KzoiLzmu-cLrAB0lbs4UCT4To86f6pF-m6LwjxuV4nOKHyJHBcCS6mPI61Lm6eKdv3fhIxzqEa9a8UI5Ag\", \"email\" => \"fo2o23233dd@bar.com\"}">>,type => map,value => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQzMDUsImlhdCI6MTU5ODQzNTEwNSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYThmMTc3M2UtMGFmYS00MTI3LWFkNmQtMmFiOTc3MmJmMGRjIiwibmJmIjoxNTk4NDM1MTA0LCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.1lR5KzoiLzmu-cLrAB0lbs4UCT4To86f6pF-m6LwjxuV4nOKHyJHBcCS6mPI61Lm6eKdv3fhIxzqEa9a8UI5Ag">>,<<"email">> => <<"fo2o23233dd@bar.com">>}},[{'Elixir.Ecto.Changeset','-convert_params/1-fun-0-',3,[{file,"lib/ecto/changeset.ex"},{line,588}]},{maps,fold_1,3,[{file,"maps.erl"},{line,233}]},{'Elixir.Ecto.Changeset',convert_params,1,[{file,"lib/ecto/changeset.ex"},{line,584}]},{'Elixir.Ecto.Changeset',cast,6,[{file,"lib/ecto/changeset.ex"},{line,489}]},{'Elixir.ExchangeApi.Accounts.User',changeset,2,[{file,"lib/exchange_api/accounts/user.ex"},{line,15}]},{'Elixir.ExchangeApi.Accounts',update_user,2,[{file,"lib/exchange_api/accounts.ex"},{line,72}]},{'Elixir.ExchangeApiWeb.UserController',update,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,31}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,18}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"ac1404cc-708c-4c3b-ae45-7772ae9b4c51">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60477},pid => <0.631.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.632.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"ac1404cc-708c-4c3b-ae45-7772ae9b4c51">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.631.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.631.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7IQntCpjjSbcEAAAFk">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 551417
  neighbours:
2020-08-26 10:45:06 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.631.0>, stream 1 had its request process <0.632.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Ecto.CastError',message => <<"expected params to be a map with atoms or string keys, got a map with mixed keys: %{:jwt => \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQzMDUsImlhdCI6MTU5ODQzNTEwNSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYThmMTc3M2UtMGFmYS00MTI3LWFkNmQtMmFiOTc3MmJmMGRjIiwibmJmIjoxNTk4NDM1MTA0LCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.1lR5KzoiLzmu-cLrAB0lbs4UCT4To86f6pF-m6LwjxuV4nOKHyJHBcCS6mPI61Lm6eKdv3fhIxzqEa9a8UI5Ag\", \"email\" => \"fo2o23233dd@bar.com\"}">>,type => map,value => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQzMDUsImlhdCI6MTU5ODQzNTEwNSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYThmMTc3M2UtMGFmYS00MTI3LWFkNmQtMmFiOTc3MmJmMGRjIiwibmJmIjoxNTk4NDM1MTA0LCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.1lR5KzoiLzmu-cLrAB0lbs4UCT4To86f6pF-m6LwjxuV4nOKHyJHBcCS6mPI61Lm6eKdv3fhIxzqEa9a8UI5Ag">>,<<"email">> => <<"fo2o23233dd@bar.com">>}},[{'Elixir.Ecto.Changeset','-convert_params/1-fun-0-',3,[{file,"lib/ecto/changeset.ex"},{line,588}]},{maps,fold_1,3,[{file,"maps.erl"},{line,233}]},{'Elixir.Ecto.Changeset',convert_params,1,[{file,"lib/ecto/changeset.ex"},{line,584}]},{'Elixir.Ecto.Changeset',cast,6,[{file,"lib/ecto/changeset.ex"},{line,489}]},{'Elixir.ExchangeApi.Accounts.User',changeset,2,[{file,"lib/exchange_api/accounts/user.ex"},{line,15}]},{'Elixir.ExchangeApi.Accounts',update_user,2,[{file,"lib/exchange_api/accounts.ex"},{line,72}]},{'Elixir.ExchangeApiWeb.UserController',update,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,31}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,18}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"ac1404cc-708c-4c3b-ae45-7772ae9b4c51">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60477},pid => <0.631.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.632.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"ac1404cc-708c-4c3b-ae45-7772ae9b4c51">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:46:03 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.634.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Plug.Conn.AlreadySentError',message => <<"the response was already sent">>},[{'Elixir.Plug.Conn',resp,3,[{file,"lib/plug/conn.ex"},{line,583}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"6244d371-61bb-4676-a353-66f8fdb7cd05">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60477},pid => <0.631.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.634.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"6244d371-61bb-4676-a353-66f8fdb7cd05">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.631.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.631.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7IT_9RlQgsZ5QAAAgD">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 36168
  neighbours:
2020-08-26 10:46:03 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.631.0>, stream 2 had its request process <0.634.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Plug.Conn.AlreadySentError',message => <<"the response was already sent">>},[{'Elixir.Plug.Conn',resp,3,[{file,"lib/plug/conn.ex"},{line,583}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"6244d371-61bb-4676-a353-66f8fdb7cd05">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60477},pid => <0.631.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.634.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"6244d371-61bb-4676-a353-66f8fdb7cd05">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:46:24 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.684.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Plug.Conn.AlreadySentError',message => <<"the response was already sent">>},[{'Elixir.Plug.Conn',resp,3,[{file,"lib/plug/conn.ex"},{line,583}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"d0f21ffe-e57a-42d0-84c3-4735a11af782">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60477},pid => <0.631.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.684.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"d0f21ffe-e57a-42d0-84c3-4735a11af782">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.631.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.631.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7IVOi6T4gG1dEAAADC">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 34495
  neighbours:
2020-08-26 10:46:24 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.631.0>, stream 3 had its request process <0.684.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Plug.Conn.AlreadySentError',message => <<"the response was already sent">>},[{'Elixir.Plug.Conn',resp,3,[{file,"lib/plug/conn.ex"},{line,583}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"d0f21ffe-e57a-42d0-84c3-4735a11af782">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60477},pid => <0.631.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.684.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"d0f21ffe-e57a-42d0-84c3-4735a11af782">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:47:43 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.688.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Plug.Conn.AlreadySentError',message => <<"the response was already sent">>},[{'Elixir.Plug.Conn',resp,3,[{file,"lib/plug/conn.ex"},{line,583}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 48,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"48">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5a36d4fc-2a6c-4ec8-9452-aef1bdaf8ba8">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60495},pid => <0.687.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.688.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"48">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5a36d4fc-2a6c-4ec8-9452-aef1bdaf8ba8">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.687.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.687.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7IZ1adFrgiGpQAAAoB">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 38792
  neighbours:
2020-08-26 10:47:43 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.687.0>, stream 1 had its request process <0.688.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Plug.Conn.AlreadySentError',message => <<"the response was already sent">>},[{'Elixir.Plug.Conn',resp,3,[{file,"lib/plug/conn.ex"},{line,583}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 48,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"48">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5a36d4fc-2a6c-4ec8-9452-aef1bdaf8ba8">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60495},pid => <0.687.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.688.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"48">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5a36d4fc-2a6c-4ec8-9452-aef1bdaf8ba8">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:52:25 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.844.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"pachedo2e334@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"pachedo2e334@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 51,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"51">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"6eee6fa2-bd06-4790-a880-98ec232bfae5">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60518},pid => <0.843.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.844.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"51">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"6eee6fa2-bd06-4790-a880-98ec232bfae5">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.843.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.843.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7IqOtw9DBLQMgAABpB">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 190741
  neighbours:
2020-08-26 10:52:25 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.843.0>, stream 1 had its request process <0.844.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"pachedo2e334@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"pachedo2e334@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 51,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"51">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"6eee6fa2-bd06-4790-a880-98ec232bfae5">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60518},pid => <0.843.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.844.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"51">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"6eee6fa2-bd06-4790-a880-98ec232bfae5">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:56:04 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.966.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Ecto.CastError',message => <<"expected params to be a :map, got: `[jwt: \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQ5NjQsImlhdCI6MTU5ODQzNTc2NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiMWY0OWE3NWUtZjIxNy00ZjYwLTg4M2ItMzllN2EwMmM5NDRiIiwibmJmIjoxNTk4NDM1NzYzLCJzdWIiOiIxMyIsInR5cCI6ImFjY2VzcyJ9.vAmbYguS4_wNVBH-JrdCICNTEWwILZYCxcPC2YcaLjCAofkH1HPSXJ-K5DGQ_-ubZ-IQfu2PviD-ri9moPH-EQ\"]`">>,type => map,value => [{jwt,<<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQ5NjQsImlhdCI6MTU5ODQzNTc2NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiMWY0OWE3NWUtZjIxNy00ZjYwLTg4M2ItMzllN2EwMmM5NDRiIiwibmJmIjoxNTk4NDM1NzYzLCJzdWIiOiIxMyIsInR5cCI6ImFjY2VzcyJ9.vAmbYguS4_wNVBH-JrdCICNTEWwILZYCxcPC2YcaLjCAofkH1HPSXJ-K5DGQ_-ubZ-IQfu2PviD-ri9moPH-EQ">>}]},[{'Elixir.Ecto.Changeset',cast,6,[{file,"lib/ecto/changeset.ex"},{line,506}]},{'Elixir.ExchangeApi.Accounts.User',changeset,2,[{file,"lib/exchange_api/accounts/user.ex"},{line,15}]},{'Elixir.ExchangeApi.Accounts',update_user,2,[{file,"lib/exchange_api/accounts.ex"},{line,75}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,20}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 60,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"60">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5488d5a3-d104-49df-bcd4-e8e3a85af5f5">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60536},pid => <0.965.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.966.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"60">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5488d5a3-d104-49df-bcd4-e8e3a85af5f5">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.965.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.965.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7I2_egt_jboFEAAAiE">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 272029
  neighbours:
2020-08-26 10:56:04 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.965.0>, stream 1 had its request process <0.966.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Ecto.CastError',message => <<"expected params to be a :map, got: `[jwt: \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQ5NjQsImlhdCI6MTU5ODQzNTc2NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiMWY0OWE3NWUtZjIxNy00ZjYwLTg4M2ItMzllN2EwMmM5NDRiIiwibmJmIjoxNTk4NDM1NzYzLCJzdWIiOiIxMyIsInR5cCI6ImFjY2VzcyJ9.vAmbYguS4_wNVBH-JrdCICNTEWwILZYCxcPC2YcaLjCAofkH1HPSXJ-K5DGQ_-ubZ-IQfu2PviD-ri9moPH-EQ\"]`">>,type => map,value => [{jwt,<<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTQ5NjQsImlhdCI6MTU5ODQzNTc2NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiMWY0OWE3NWUtZjIxNy00ZjYwLTg4M2ItMzllN2EwMmM5NDRiIiwibmJmIjoxNTk4NDM1NzYzLCJzdWIiOiIxMyIsInR5cCI6ImFjY2VzcyJ9.vAmbYguS4_wNVBH-JrdCICNTEWwILZYCxcPC2YcaLjCAofkH1HPSXJ-K5DGQ_-ubZ-IQfu2PviD-ri9moPH-EQ">>}]},[{'Elixir.Ecto.Changeset',cast,6,[{file,"lib/ecto/changeset.ex"},{line,506}]},{'Elixir.ExchangeApi.Accounts.User',changeset,2,[{file,"lib/exchange_api/accounts/user.ex"},{line,15}]},{'Elixir.ExchangeApi.Accounts',update_user,2,[{file,"lib/exchange_api/accounts.ex"},{line,75}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,20}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 60,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"60">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5488d5a3-d104-49df-bcd4-e8e3a85af5f5">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60536},pid => <0.965.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.966.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"60">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5488d5a3-d104-49df-bcd4-e8e3a85af5f5">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 10:56:19 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1016.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"pa22c34ddddddddcddddd@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"pa22c34ddddddddcddddd@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 60,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"60">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"e64ea082-7063-4e40-8d1a-e98f12aa82a0">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60536},pid => <0.965.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1016.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"60">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"e64ea082-7063-4e40-8d1a-e98f12aa82a0">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.965.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.965.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7I30JsZRiFXW0AAAlE">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 191214
  neighbours:
2020-08-26 10:56:19 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.965.0>, stream 2 had its request process <0.1016.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"pa22c34ddddddddcddddd@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"pa22c34ddddddddcddddd@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 60,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"60">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"e64ea082-7063-4e40-8d1a-e98f12aa82a0">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60536},pid => <0.965.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1016.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"60">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"e64ea082-7063-4e40-8d1a-e98f12aa82a0">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:01:27 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1282.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"ludids@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"ludids@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 45,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"45">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"959bc6db-7333-45b9-819d-c69a3774f0f9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60580},pid => <0.1171.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1282.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"45">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"959bc6db-7333-45b9-819d-c69a3774f0f9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1171.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1171.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7JJwmRx2jifQkAAA7E">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 190793
  neighbours:
2020-08-26 11:01:27 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1171.0>, stream 3 had its request process <0.1282.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"ludids@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"ludids@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 45,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"45">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"959bc6db-7333-45b9-819d-c69a3774f0f9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60580},pid => <0.1171.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1282.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"45">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"959bc6db-7333-45b9-819d-c69a3774f0f9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:04:41 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1336.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Postgrex.Error',connection_id => 56842,message => nil,postgres => #{code => string_data_right_truncation,file => <<"varchar.c">>,line => <<"636">>,message => <<"value too long for type character varying(255)">>,pg_code => <<"22001">>,routine => <<"varchar">>,severity => <<"ERROR">>,unknown => <<"ERROR">>},query => nil},[{'Elixir.Ecto.Adapters.SQL',raise_sql_call_error,1,[{file,"lib/ecto/adapters/sql.ex"},{line,593}]},{'Elixir.Ecto.Repo.Schema',apply,4,[{file,"lib/ecto/repo/schema.ex"},{line,661}]},{'Elixir.Ecto.Repo.Schema','-do_update/4-fun-0-',15,[{file,"lib/ecto/repo/schema.ex"},{line,348}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,21}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"6fb10410-4d33-4e5f-9e96-24fcf704ef78">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60637},pid => <0.1335.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1336.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"6fb10410-4d33-4e5f-9e96-24fcf704ef78">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1335.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1335.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7JVB-zcFAdMi8AAEUB">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 291023
  neighbours:
2020-08-26 11:04:41 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1335.0>, stream 1 had its request process <0.1336.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Postgrex.Error',connection_id => 56842,message => nil,postgres => #{code => string_data_right_truncation,file => <<"varchar.c">>,line => <<"636">>,message => <<"value too long for type character varying(255)">>,pg_code => <<"22001">>,routine => <<"varchar">>,severity => <<"ERROR">>,unknown => <<"ERROR">>},query => nil},[{'Elixir.Ecto.Adapters.SQL',raise_sql_call_error,1,[{file,"lib/ecto/adapters/sql.ex"},{line,593}]},{'Elixir.Ecto.Repo.Schema',apply,4,[{file,"lib/ecto/repo/schema.ex"},{line,661}]},{'Elixir.Ecto.Repo.Schema','-do_update/4-fun-0-',15,[{file,"lib/ecto/repo/schema.ex"},{line,348}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,21}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"6fb10410-4d33-4e5f-9e96-24fcf704ef78">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60637},pid => <0.1335.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1336.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"6fb10410-4d33-4e5f-9e96-24fcf704ef78">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:10:09 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1395.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"lusddid2s@bar.com">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,15}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 48,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"48">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"e55be71a-24e1-4af1-b7bc-86b8b8fc8063">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60680},pid => <0.1394.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1395.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"48">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"e55be71a-24e1-4af1-b7bc-86b8b8fc8063">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1394.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1394.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7JoLg_X0CVtK0AABEE">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 212605
  neighbours:
2020-08-26 11:10:09 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1394.0>, stream 1 had its request process <0.1395.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"lusddid2s@bar.com">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,15}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 48,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"48">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"e55be71a-24e1-4af1-b7bc-86b8b8fc8063">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60680},pid => <0.1394.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1395.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"48">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"e55be71a-24e1-4af1-b7bc-86b8b8fc8063">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:13:34 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1448.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => id,message => nil,term => #{<<"email">> => <<"lusddid2ddds@bar.com">>,<<"jwt">> => <<>>}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,18}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 51,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"51">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2ecafaed-91ac-44a3-92c3-24984b4c8b30">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60708},pid => <0.1447.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1448.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"51">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2ecafaed-91ac-44a3-92c3-24984b4c8b30">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1447.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1447.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7J0G0fSGDZ8fAAACeD">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 224250
  neighbours:
2020-08-26 11:13:34 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1447.0>, stream 1 had its request process <0.1448.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => id,message => nil,term => #{<<"email">> => <<"lusddid2ddds@bar.com">>,<<"jwt">> => <<>>}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,18}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 51,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"51">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2ecafaed-91ac-44a3-92c3-24984b4c8b30">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60708},pid => <0.1447.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1448.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"51">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2ecafaed-91ac-44a3-92c3-24984b4c8b30">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:13:58 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1498.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Postgrex.Error',connection_id => 56839,message => nil,postgres => #{code => string_data_right_truncation,file => <<"varchar.c">>,line => <<"636">>,message => <<"value too long for type character varying(255)">>,pg_code => <<"22001">>,routine => <<"varchar">>,severity => <<"ERROR">>,unknown => <<"ERROR">>},query => nil},[{'Elixir.Ecto.Adapters.SQL',raise_sql_call_error,1,[{file,"lib/ecto/adapters/sql.ex"},{line,593}]},{'Elixir.Ecto.Repo.Schema',apply,4,[{file,"lib/ecto/repo/schema.ex"},{line,661}]},{'Elixir.Ecto.Repo.Schema','-do_update/4-fun-0-',15,[{file,"lib/ecto/repo/schema.ex"},{line,348}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,22}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 54,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"54">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"3d8dcbfd-fcfc-4c59-a20d-260d6df676e7">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60708},pid => <0.1447.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1498.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"54">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"3d8dcbfd-fcfc-4c59-a20d-260d6df676e7">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1447.0>,<0.526.0>,<0.525.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1447.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7J1e5YybBfdTYAACoD">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 288751
  neighbours:
2020-08-26 11:13:58 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1447.0>, stream 2 had its request process <0.1498.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Postgrex.Error',connection_id => 56839,message => nil,postgres => #{code => string_data_right_truncation,file => <<"varchar.c">>,line => <<"636">>,message => <<"value too long for type character varying(255)">>,pg_code => <<"22001">>,routine => <<"varchar">>,severity => <<"ERROR">>,unknown => <<"ERROR">>},query => nil},[{'Elixir.Ecto.Adapters.SQL',raise_sql_call_error,1,[{file,"lib/ecto/adapters/sql.ex"},{line,593}]},{'Elixir.Ecto.Repo.Schema',apply,4,[{file,"lib/ecto/repo/schema.ex"},{line,661}]},{'Elixir.Ecto.Repo.Schema','-do_update/4-fun-0-',15,[{file,"lib/ecto/repo/schema.ex"},{line,348}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,22}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 54,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"54">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"3d8dcbfd-fcfc-4c59-a20d-260d6df676e7">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60708},pid => <0.1447.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1498.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"54">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"3d8dcbfd-fcfc-4c59-a20d-260d6df676e7">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:21:18 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.622.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"lusddid2dddddds@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"lusddid2dddddds@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email,jwt],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 54,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"54">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"90365a9e-4303-4ab3-8b4d-90fdc380995d">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60786},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"54">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"90365a9e-4303-4ab3-8b4d-90fdc380995d">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.621.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.621.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7KPFPtLfAJv6MAAAJB">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 179223
  neighbours:
2020-08-26 11:21:18 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.621.0>, stream 1 had its request process <0.622.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"lusddid2dddddds@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"lusddid2dddddds@bar.com">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email,jwt],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 54,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"54">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"90365a9e-4303-4ab3-8b4d-90fdc380995d">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60786},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"54">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"90365a9e-4303-4ab3-8b4d-90fdc380995d">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:24:18 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.626.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"ddlusddid2dddddds@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"ddlusddid2dddddds@bar.com">>,<<"jwt">> => <<>>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email,jwt],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 56,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"56">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"7ff88264-81bd-426c-9fc4-c18da62c8185">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60809},pid => <0.625.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.626.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"56">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"7ff88264-81bd-426c-9fc4-c18da62c8185">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.625.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.625.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7KZkLF3HihAfsAAARB">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 178600
  neighbours:
2020-08-26 11:24:18 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.625.0>, stream 1 had its request process <0.626.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"ddlusddid2dddddds@bar.com">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"ddlusddid2dddddds@bar.com">>,<<"jwt">> => <<>>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email,jwt],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 56,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"56">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"7ff88264-81bd-426c-9fc4-c18da62c8185">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},60809},pid => <0.625.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.626.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"56">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"7ff88264-81bd-426c-9fc4-c18da62c8185">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:43:28 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.748.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.748.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7LchPPo7CbNl8AAAdk">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for GET /ticker/AUXLND (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.748.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.747.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.747.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7LchPPo7CbNl8AAAdk">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 89796
  neighbours:
2020-08-26 11:43:28 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.747.0>, stream 1 had its request process <0.748.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.748.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7LchPPo7CbNl8AAAdk">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for GET /ticker/AUXLND (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.748.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:43:43 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.812.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND/open">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.812.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>,<<"open">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7LdYjtMXhN-C8AAAeE">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for GET /ticker/AUXLND/open (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND/open">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.812.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>,<<"open">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.747.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.747.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7LdYjtMXhN-C8AAAeE">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 90686
  neighbours:
2020-08-26 11:43:43 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.747.0>, stream 2 had its request process <0.812.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND/open">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.812.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>,<<"open">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{<<"_contexsample_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"_exchange_api_key">> => <<"SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs">>},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7LdYjtMXhN-C8AAAeE">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for GET /ticker/AUXLND/open (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"accept-language">> => <<"en-GB,en-US;q=0.9,en;q=0.8">>,<<"connection">> => <<"keep-alive">>,<<"cookie">> => <<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>,<<"host">> => <<"localhost:4000">>,<<"sec-fetch-dest">> => <<"document">>,<<"sec-fetch-mode">> => <<"navigate">>,<<"sec-fetch-site">> => <<"none">>,<<"sec-fetch-user">> => <<"?1">>,<<"upgrade-insecure-requests">> => <<"1">>,<<"user-agent">> => <<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>},host => <<"localhost">>,host_info => undefined,method => <<"GET">>,path => <<"/ticker/AUXLND/open">>,path_info => undefined,peer => {{127,0,0,1},60952},pid => <0.747.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"GET">>,owner => <0.812.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>,<<"open">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"accept-language">>,<<"en-GB,en-US;q=0.9,en;q=0.8">>},{<<"connection">>,<<"keep-alive">>},{<<"cookie">>,<<"_exchange_api_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYeHFXNDJsaWo5RTJFOEZ2R2d4VnRzLV8t.1gUyEAVCzYGq-M2aPMEcSUuatSuTUsQGy84K7UFQ-Bs; _contexsample_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYS216R3Q3RW83cGpFaml4bkg3QjRBWGlF.beryjXf3pmO6etg2c2acqmQ9nBTLQi5nixNkFaPrghA">>},{<<"host">>,<<"localhost:4000">>},{<<"sec-fetch-dest">>,<<"document">>},{<<"sec-fetch-mode">>,<<"navigate">>},{<<"sec-fetch-site">>,<<"none">>},{<<"sec-fetch-user">>,<<"?1">>},{<<"upgrade-insecure-requests">>,<<"1">>},{<<"user-agent">>,<<"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 OPR/70.0.3728.106">>}],request_path => <<"/ticker/AUXLND/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:44:43 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.817.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"authorization">> => <<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.817.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"authorization">>,<<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7Lg4q893hbU4YAAAfE">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for POST /ticker/AUXLND/orders/open (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"authorization">> => <<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.817.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"authorization">>,<<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.816.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.816.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7Lg4q893hbU4YAAAfE">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 90493
  neighbours:
2020-08-26 11:44:43 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.816.0>, stream 1 had its request process <0.817.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"authorization">> => <<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.817.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"authorization">>,<<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7Lg4q893hbU4YAAAfE">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for POST /ticker/AUXLND/orders/open (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"authorization">> => <<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.817.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"authorization">>,<<"Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NTY2ODEsImlhdCI6MTU5ODQzNzQ4MSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDBiMTRhMDctNzRjNS00Y2IyLTgyMmMtMThiMDg2NzdiOWM1IiwibmJmIjoxNTk4NDM3NDgwLCJzdWIiOiIxIiwidHlwIjoiYWNjZXNzIn0.Cm_Kvpx1tDSXsi7tHC7R3hnZONyxVDVsWs5SnY-ByTMcWJHOhqIaUTlXWkqjRjZN45KlCGi-n4eZBtsXAFSXWw">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"5abb0eac-35ea-4a45-89eb-ca6748757bd9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 11:45:11 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.820.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.820.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7LielFtvj035QAAAfk">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for POST /ticker/AUXLND/orders/open (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.820.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.816.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.816.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7LielFtvj035QAAAfk">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 89317
  neighbours:
2020-08-26 11:45:11 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.816.0>, stream 2 had its request process <0.820.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Router.NoRouteError',conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.820.0>,params => #{},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7LielFtvj035QAAAfk">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},message => <<"no route found for POST /ticker/AUXLND/orders/open (ExchangeApiWeb.Router)">>,plug_status => 404,router => 'Elixir.ExchangeApiWeb.Router'},[{'Elixir.ExchangeApiWeb.Router',call,2,[{file,"lib/phoenix/router.ex"},{line,402}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 0,cert => undefined,has_body => false,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"0">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/ticker/AUXLND/orders/open">>,path_info => undefined,peer => {{127,0,0,1},60963},pid => <0.816.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.820.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"ticker">>,<<"AUXLND">>,<<"orders">>,<<"open">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"0">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"ecb4116b-4c13-49d7-bccf-d5cc59ac9c37">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/ticker/AUXLND/orders/open">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
