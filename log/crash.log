2020-08-26 12:38:16 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.Exchange.Supervisor'}
     Context:    start_error
     Reason:     {badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
     Offender:   [{pid,undefined},{id,'AUXLND'},{mfargs,{'Elixir.Exchange.MatchingEngine',start_link,[[{ticker,'AUXLND'},{currency,'GBP'},{min_price,1000},{max_price,100000}]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 12:38:17 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.555.0>
    registered_name: []
    exception exit: {{{shutdown,{failed_to_start_child,'AUXLND',{badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}},{'Elixir.Exchange.Application',start,[normal,[]]}},[{application_master,init,4,[{file,"application_master.erl"},{line,138}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: [<0.554.0>]
    message_queue_len: 1
    messages: [{'EXIT',<0.556.0>,normal}]
    links: [<0.554.0>,<0.43.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 180
  neighbours:
2020-08-26 12:47:48 =CRASH REPORT====
  crasher:
    initial call: Elixir.Exchange.MatchingEngine:init/1
    pid: <0.574.0>
    registered_name: []
    exception error: bad argument: [{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]
    ancestors: ['Elixir.Exchange.Supervisor',<0.556.0>]
    message_queue_len: 0
    messages: []
    links: [<0.558.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 509
  neighbours:
2020-08-26 12:47:49 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.Exchange.Supervisor'}
     Context:    start_error
     Reason:     {badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
     Offender:   [{pid,undefined},{id,'AUXLND'},{mfargs,{'Elixir.Exchange.MatchingEngine',start_link,[[{ticker,'AUXLND'},{currency,'GBP'},{min_price,1000},{max_price,100000}]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 12:47:49 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.555.0>
    registered_name: []
    exception exit: {{{shutdown,{failed_to_start_child,'AUXLND',{badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}},{'Elixir.Exchange.Application',start,[normal,[]]}},[{application_master,init,4,[{file,"application_master.erl"},{line,138}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: [<0.554.0>]
    message_queue_len: 1
    messages: [{'EXIT',<0.556.0>,normal}]
    links: [<0.554.0>,<0.43.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 184
  neighbours:
2020-08-26 12:48:40 =CRASH REPORT====
  crasher:
    initial call: Elixir.Exchange.MatchingEngine:init/1
    pid: <0.421.0>
    registered_name: []
    exception error: bad argument: [{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]
    ancestors: ['Elixir.Exchange.Supervisor',<0.403.0>]
    message_queue_len: 0
    messages: []
    links: [<0.405.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 509
  neighbours:
2020-08-26 12:48:40 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.Exchange.Supervisor'}
     Context:    start_error
     Reason:     {badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
     Offender:   [{pid,undefined},{id,'AUXLND'},{mfargs,{'Elixir.Exchange.MatchingEngine',start_link,[[{ticker,'AUXLND'},{currency,'GBP'},{min_price,1000},{max_price,100000}]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 12:48:40 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.402.0>
    registered_name: []
    exception exit: {{{shutdown,{failed_to_start_child,'AUXLND',{badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}},{'Elixir.Exchange.Application',start,[normal,[]]}},[{application_master,init,4,[{file,"application_master.erl"},{line,138}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: [<0.401.0>]
    message_queue_len: 1
    messages: [{'EXIT',<0.403.0>,normal}]
    links: [<0.401.0>,<0.43.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 184
  neighbours:
2020-08-26 13:07:51 =CRASH REPORT====
  crasher:
    initial call: Elixir.Exchange.MatchingEngine:init/1
    pid: <0.574.0>
    registered_name: []
    exception error: bad argument: [{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]
    ancestors: ['Elixir.Exchange.Supervisor',<0.556.0>]
    message_queue_len: 0
    messages: []
    links: [<0.558.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 509
  neighbours:
2020-08-26 13:07:51 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.Exchange.Supervisor'}
     Context:    start_error
     Reason:     {badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
     Offender:   [{pid,undefined},{id,'AUXLND'},{mfargs,{'Elixir.Exchange.MatchingEngine',start_link,[[{ticker,'AUXLND'},{currency,'GBP'},{min_price,1000},{max_price,100000}]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 13:07:51 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.555.0>
    registered_name: []
    exception exit: {{{shutdown,{failed_to_start_child,'AUXLND',{badarg,[{erlang,apply,[{error,econnrefused},results,[]],[]},{'Elixir.Exchange.Adapters.Flux.Orders',get_live_orders,1,[{file,"lib/exchange/adapters/flux/orders.ex"},{line,40}]},{'Elixir.Exchange.Adapters.Flux',get_live_orders,1,[{file,"lib/exchange/adapters/flux.ex"},{line,67}]},{'Elixir.Exchange.MatchingEngine','order_book_restore!',1,[{file,"lib/exchange/matching_engine.ex"},{line,188}]},{'Elixir.Exchange.MatchingEngine',init,1,[{file,"lib/exchange/matching_engine.ex"},{line,180}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,374}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,342}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}},{'Elixir.Exchange.Application',start,[normal,[]]}},[{application_master,init,4,[{file,"application_master.erl"},{line,138}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: [<0.554.0>]
    message_queue_len: 1
    messages: [{'EXIT',<0.556.0>,normal}]
    links: [<0.554.0>,<0.43.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 184
  neighbours:
2020-08-26 14:56:58 =ERROR REPORT====
** Generic server <0.699.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:58 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.699.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.698.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.698.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4760
  neighbours:
2020-08-26 14:56:58 =SUPERVISOR REPORT====
     Supervisor: {<0.698.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.699.0>},{id,{'Elixir.Postgrex.Protocol',<0.697.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.697.0>,#Ref<0.1716086255.2407399425.16761>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:58 =ERROR REPORT====
** Generic server <0.707.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:58 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.707.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.698.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.698.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.698.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.707.0>},{id,{'Elixir.Postgrex.Protocol',<0.697.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.697.0>,#Ref<0.1716086255.2407399425.16761>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.708.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.708.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.698.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.698.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.698.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.708.0>},{id,{'Elixir.Postgrex.Protocol',<0.697.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.697.0>,#Ref<0.1716086255.2407399425.16761>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.709.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.709.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.698.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.698.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.698.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.709.0>},{id,{'Elixir.Postgrex.Protocol',<0.697.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.697.0>,#Ref<0.1716086255.2407399425.16761>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.698.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.709.0>},{id,{'Elixir.Postgrex.Protocol',<0.697.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.697.0>,#Ref<0.1716086255.2407399425.16761>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.697.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399425.16760>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.697.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399425.16760>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.696.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.834.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.834.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.833.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.833.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.833.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.834.0>},{id,{'Elixir.Postgrex.Protocol',<0.832.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.832.0>,#Ref<0.1716086255.2407399426.15258>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.835.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.835.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.833.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.833.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.833.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.835.0>},{id,{'Elixir.Postgrex.Protocol',<0.832.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.832.0>,#Ref<0.1716086255.2407399426.15258>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.836.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.836.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.833.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.833.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.833.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.836.0>},{id,{'Elixir.Postgrex.Protocol',<0.832.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.832.0>,#Ref<0.1716086255.2407399426.15258>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.837.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.837.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.833.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.833.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.833.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.837.0>},{id,{'Elixir.Postgrex.Protocol',<0.832.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.832.0>,#Ref<0.1716086255.2407399426.15258>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.833.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.837.0>},{id,{'Elixir.Postgrex.Protocol',<0.832.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.832.0>,#Ref<0.1716086255.2407399426.15258>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.832.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399426.15257>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.832.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399426.15257>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.831.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.841.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.841.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.840.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.840.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.840.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.841.0>},{id,{'Elixir.Postgrex.Protocol',<0.839.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.839.0>,#Ref<0.1716086255.2407399425.16910>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.842.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.842.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.840.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.840.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.840.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.842.0>},{id,{'Elixir.Postgrex.Protocol',<0.839.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.839.0>,#Ref<0.1716086255.2407399425.16910>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.843.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.843.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.840.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.840.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.840.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.843.0>},{id,{'Elixir.Postgrex.Protocol',<0.839.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.839.0>,#Ref<0.1716086255.2407399425.16910>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.844.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.844.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.840.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.840.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.840.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.844.0>},{id,{'Elixir.Postgrex.Protocol',<0.839.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.839.0>,#Ref<0.1716086255.2407399425.16910>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.840.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.844.0>},{id,{'Elixir.Postgrex.Protocol',<0.839.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.839.0>,#Ref<0.1716086255.2407399425.16910>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.839.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399425.16909>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.839.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399425.16909>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.838.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.848.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.848.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.847.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.847.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.847.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.848.0>},{id,{'Elixir.Postgrex.Protocol',<0.846.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.846.0>,#Ref<0.1716086255.2407399425.16932>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.849.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.849.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.847.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.847.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.847.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.849.0>},{id,{'Elixir.Postgrex.Protocol',<0.846.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.846.0>,#Ref<0.1716086255.2407399425.16932>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.850.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.850.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.847.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.847.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.847.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.850.0>},{id,{'Elixir.Postgrex.Protocol',<0.846.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.846.0>,#Ref<0.1716086255.2407399425.16932>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =ERROR REPORT====
** Generic server <0.851.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:56:59 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.851.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.847.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.537.0>]
    message_queue_len: 0
    messages: []
    links: [<0.847.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.847.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.851.0>},{id,{'Elixir.Postgrex.Protocol',<0.846.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.846.0>,#Ref<0.1716086255.2407399425.16932>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {<0.847.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.851.0>},{id,{'Elixir.Postgrex.Protocol',<0.846.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.846.0>,#Ref<0.1716086255.2407399425.16932>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.846.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399425.16931>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.846.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1716086255.2407399425.16931>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:56:59 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.845.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.478.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.478.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4857
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.478.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.4281642551.1066008577.21289>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.486.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.486.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4651
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.486.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.4281642551.1066008577.21289>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.487.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.487.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4651
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.487.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.4281642551.1066008577.21289>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.488.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.488.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4651
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.488.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.4281642551.1066008577.21289>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.488.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.4281642551.1066008577.21289>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.476.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.4281642551.1066008577.21288>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.476.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.4281642551.1066008577.21288>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.475.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.613.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.613.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.612.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.612.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4651
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.612.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.613.0>},{id,{'Elixir.Postgrex.Protocol',<0.611.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.611.0>,#Ref<0.4281642551.1066008577.21594>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.614.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.614.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.612.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.612.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4651
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.612.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.614.0>},{id,{'Elixir.Postgrex.Protocol',<0.611.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.611.0>,#Ref<0.4281642551.1066008577.21594>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:57:37 =ERROR REPORT====
** Generic server <0.615.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:57:37 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.615.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.612.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.612.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4651
  neighbours:
2020-08-26 14:57:37 =SUPERVISOR REPORT====
     Supervisor: {<0.612.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.615.0>},{id,{'Elixir.Postgrex.Protocol',<0.611.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.611.0>,#Ref<0.4281642551.1066008577.21594>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.488.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.488.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4844
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.488.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.3264398455.2139750402.152682>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.496.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.496.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.496.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.3264398455.2139750402.152682>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.497.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.497.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.497.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.3264398455.2139750402.152682>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.498.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.498.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.498.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.3264398455.2139750402.152682>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.498.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.3264398455.2139750402.152682>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.486.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.3264398455.2139750402.152681>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.486.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.3264398455.2139750402.152681>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.485.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.623.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.623.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.622.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.622.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.622.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.623.0>},{id,{'Elixir.Postgrex.Protocol',<0.621.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.621.0>,#Ref<0.3264398455.2139750403.150863>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.624.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.624.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.622.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.622.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.622.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.624.0>},{id,{'Elixir.Postgrex.Protocol',<0.621.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.621.0>,#Ref<0.3264398455.2139750403.150863>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.625.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.625.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.622.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.622.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.622.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.625.0>},{id,{'Elixir.Postgrex.Protocol',<0.621.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.621.0>,#Ref<0.3264398455.2139750403.150863>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.626.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.626.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.622.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.622.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.622.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.626.0>},{id,{'Elixir.Postgrex.Protocol',<0.621.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.621.0>,#Ref<0.3264398455.2139750403.150863>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.622.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.626.0>},{id,{'Elixir.Postgrex.Protocol',<0.621.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.621.0>,#Ref<0.3264398455.2139750403.150863>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.621.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.3264398455.2139750403.150862>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.621.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.3264398455.2139750403.150862>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.620.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.630.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.630.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.629.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.629.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.629.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.630.0>},{id,{'Elixir.Postgrex.Protocol',<0.628.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.628.0>,#Ref<0.3264398455.2139750403.150894>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.631.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.631.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.629.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.629.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.629.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.631.0>},{id,{'Elixir.Postgrex.Protocol',<0.628.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.628.0>,#Ref<0.3264398455.2139750403.150894>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.632.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.632.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.629.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.629.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.629.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.632.0>},{id,{'Elixir.Postgrex.Protocol',<0.628.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.628.0>,#Ref<0.3264398455.2139750403.150894>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =ERROR REPORT====
** Generic server <0.633.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 14:59:02 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.633.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.629.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.629.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4659
  neighbours:
2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.629.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.633.0>},{id,{'Elixir.Postgrex.Protocol',<0.628.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.628.0>,#Ref<0.3264398455.2139750403.150894>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {<0.629.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.633.0>},{id,{'Elixir.Postgrex.Protocol',<0.628.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.628.0>,#Ref<0.3264398455.2139750403.150894>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 14:59:02 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.628.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.3264398455.2139750403.150893>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =ERROR REPORT====
** Generic server <0.488.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:08 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.488.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4866
  neighbours:
2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.488.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.1177299713.2945056769.146320>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =ERROR REPORT====
** Generic server <0.496.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:08 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.496.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4680
  neighbours:
2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.496.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.1177299713.2945056769.146320>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =ERROR REPORT====
** Generic server <0.497.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:08 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.497.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4680
  neighbours:
2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.497.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.1177299713.2945056769.146320>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =ERROR REPORT====
** Generic server <0.498.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:08 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.498.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.487.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.487.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4680
  neighbours:
2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.498.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.1177299713.2945056769.146320>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {<0.487.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.498.0>},{id,{'Elixir.Postgrex.Protocol',<0.486.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.486.0>,#Ref<0.1177299713.2945056769.146320>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.486.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1177299713.2945056769.146319>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.486.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1177299713.2945056769.146319>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:08 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.485.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 15:00:09 =ERROR REPORT====
** Generic server <0.623.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:09 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.623.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.622.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.622.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4680
  neighbours:
2020-08-26 15:00:09 =SUPERVISOR REPORT====
     Supervisor: {<0.622.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.623.0>},{id,{'Elixir.Postgrex.Protocol',<0.621.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.621.0>,#Ref<0.1177299713.2945056770.139609>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:09 =ERROR REPORT====
** Generic server <0.624.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:09 =ERROR REPORT====
** Generic server <0.630.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:09 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.630.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.629.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.629.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4680
  neighbours:
2020-08-26 15:00:09 =SUPERVISOR REPORT====
     Supervisor: {<0.629.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.630.0>},{id,{'Elixir.Postgrex.Protocol',<0.628.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.628.0>,#Ref<0.1177299713.2945056772.139251>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:09 =ERROR REPORT====
** Generic server <0.631.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:09 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.631.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.629.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.629.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4680
  neighbours:
2020-08-26 15:00:49 =ERROR REPORT====
** Generic server <0.478.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:49 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.478.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4824
  neighbours:
2020-08-26 15:00:49 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.478.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.1098111977.1334181889.170690>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:49 =ERROR REPORT====
** Generic server <0.486.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:49 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.486.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4637
  neighbours:
2020-08-26 15:00:49 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.486.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.1098111977.1334181889.170690>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:49 =ERROR REPORT====
** Generic server <0.487.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:49 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.487.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4637
  neighbours:
2020-08-26 15:00:49 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.487.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.1098111977.1334181889.170690>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:49 =ERROR REPORT====
** Generic server <0.488.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:49 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.488.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.477.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.477.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4637
  neighbours:
2020-08-26 15:00:49 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.488.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.1098111977.1334181889.170690>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:50 =SUPERVISOR REPORT====
     Supervisor: {<0.477.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.488.0>},{id,{'Elixir.Postgrex.Protocol',<0.476.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.476.0>,#Ref<0.1098111977.1334181889.170690>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:50 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    child_terminated
     Reason:     killed
     Offender:   [{pid,<0.476.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1098111977.1334181889.170689>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:50 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.476.0>},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.1098111977.1334181889.170689>,opts => [{timeout,15000},{pool_size,nil},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:00:50 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    child_terminated
     Reason:     shutdown
     Offender:   [{pid,<0.475.0>},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 15:00:50 =ERROR REPORT====
** Generic server <0.613.0> terminating 
** Last message in was nil
** When Server state == 'Elixir.Postgrex.Protocol'
** Reason for termination == 
** {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
2020-08-26 15:00:50 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.Connection:init/1
    pid: <0.613.0>
    registered_name: []
    exception exit: {{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},[{'Elixir.Connection',enter_stop,5,[{file,"lib/connection.ex"},{line,686}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.612.0>,'Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.612.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 4637
  neighbours:
2020-08-26 15:00:50 =SUPERVISOR REPORT====
     Supervisor: {<0.612.0>,'Elixir.DBConnection.ConnectionPool.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"connect raised ArgumentError exception. The exception details are hidden, as they may contain sensitive data such as database credentials. You may set :show_sensitive_data_on_connection_error to true when starting your connection if you wish to see all of the details">>},[{'Elixir.Postgrex.Protocol',host_and_port,1,[{file,"lib/postgrex/protocol.ex"},{line,129}]},{'Elixir.Postgrex.Protocol',connect,1,[{file,"lib/postgrex/protocol.ex"},{line,65}]},{'Elixir.DBConnection.Connection',connect,2,[{file,"lib/db_connection/connection.ex"},{line,69}]},{'Elixir.Connection',enter_connect,5,[{file,"lib/connection.ex"},{line,622}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,<0.613.0>},{id,{'Elixir.Postgrex.Protocol',<0.611.0>,1}},{mfargs,{'Elixir.DBConnection.Connection',start_link,['Elixir.Postgrex.Protocol',[{pool_index,1},{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{pool,'Elixir.DBConnection.ConnectionPool'}],<0.611.0>,#Ref<0.1098111977.1334181891.167657>]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:01:45 =CRASH REPORT====
  crasher:
    initial call: supervisor:Elixir.DBConnection.ConnectionPool.Pool/1
    pid: <0.477.0>
    registered_name: []
    exception error: {#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: ['Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.320.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 28
    reductions: 410
  neighbours:
2020-08-26 15:01:45 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.ConnectionPool:init/1
    pid: <0.476.0>
    registered_name: []
    exception error: {{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: ['Elixir.ExchangeApi.Repo','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.475.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 28
    reductions: 280
  neighbours:
2020-08-26 15:01:45 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    start_error
     Reason:     {{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,undefined},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{username,<<"postgres">>},{password,<<"postgres">>},{database,<<"alchemist">>},{hostname,<<"localhost">>},{pool_size,<<"10">>},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.3933304824.3214016513.207469>,opts => [{timeout,15000},{pool_size,<<"10">>},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:01:45 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    start_error
     Reason:     {shutdown,{failed_to_start_child,'Elixir.DBConnection.ConnectionPool',{{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}}
     Offender:   [{pid,undefined},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2020-08-26 15:02:47 =CRASH REPORT====
  crasher:
    initial call: supervisor:Elixir.DBConnection.ConnectionPool.Pool/1
    pid: <0.487.0>
    registered_name: []
    exception error: {#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: ['Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.326.0>]
    message_queue_len: 0
    messages: []
    links: [<0.330.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 28
    reductions: 399
  neighbours:
2020-08-26 15:02:47 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    start_error
     Reason:     {{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,undefined},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{username,<<"postgres">>},{password,<<"postgres">>},{database,<<"alchemist">>},{hostname,<<"localhost">>},{pool_size,<<"10">>},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.2205629116.2676621313.227754>,opts => [{timeout,15000},{pool_size,<<"10">>},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2020-08-26 15:02:47 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.ConnectionPool:init/1
    pid: <0.486.0>
    registered_name: []
    exception error: {{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: ['Elixir.ExchangeApi.Repo','Elixir.ExchangeApi.Supervisor',<0.483.0>]
    message_queue_len: 0
    messages: []
    links: [<0.485.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 28
    reductions: 280
  neighbours:
2020-08-26 15:02:47 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Supervisor'}
     Context:    start_error
     Reason:     {shutdown,{failed_to_start_child,'Elixir.DBConnection.ConnectionPool',{{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}}
     Offender:   [{pid,undefined},{id,'Elixir.ExchangeApi.Repo'},{mfargs,{'Elixir.ExchangeApi.Repo',start_link,[[]]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]

2020-08-26 15:02:47 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.482.0>
    registered_name: []
    exception exit: {{{shutdown,{failed_to_start_child,'Elixir.ExchangeApi.Repo',{shutdown,{failed_to_start_child,'Elixir.DBConnection.ConnectionPool',{{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}}}},{'Elixir.ExchangeApi.Application',start,[normal,[]]}},[{application_master,init,4,[{file,"application_master.erl"},{line,138}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: [<0.481.0>]
    message_queue_len: 1
    messages: [{'EXIT',<0.483.0>,normal}]
    links: [<0.481.0>,<0.44.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 28
    reductions: 259
  neighbours:
2020-08-26 15:04:09 =CRASH REPORT====
  crasher:
    initial call: supervisor:Elixir.DBConnection.ConnectionPool.Pool/1
    pid: <0.477.0>
    registered_name: []
    exception error: {#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: ['Elixir.DBConnection.ConnectionPool.Supervisor','Elixir.DBConnection.App',<0.316.0>]
    message_queue_len: 0
    messages: []
    links: [<0.320.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 28
    reductions: 399
  neighbours:
2020-08-26 15:04:09 =CRASH REPORT====
  crasher:
    initial call: Elixir.DBConnection.ConnectionPool:init/1
    pid: <0.476.0>
    registered_name: []
    exception error: {{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
    ancestors: ['Elixir.ExchangeApi.Repo','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.475.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 28
    reductions: 280
  neighbours:
2020-08-26 15:04:09 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.ExchangeApi.Repo'}
     Context:    start_error
     Reason:     {{badmatch,{error,{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"ranges (first..last) expect both sides to be integers, got: 1..\"10\"">>},[{'Elixir.Range',new,2,[{file,"lib/range.ex"},{line,63}]},{'Elixir.DBConnection.ConnectionPool.Pool',init,1,[{file,"lib/db_connection/connection_pool/pool.ex"},{line,18}]},{supervisor,init,1,[{file,"supervisor.erl"},{line,301}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}}},[{'Elixir.DBConnection.ConnectionPool',init,1,[{file,"lib/db_connection/connection_pool.ex"},{line,22}]},{gen_server,init_it,2,[{file,"gen_server.erl"},{line,417}]},{gen_server,init_it,6,[{file,"gen_server.erl"},{line,385}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]}
     Offender:   [{pid,undefined},{id,'Elixir.DBConnection.ConnectionPool'},{mfargs,{'Elixir.Ecto.Repo.Supervisor',start_child,[{'Elixir.DBConnection.ConnectionPool',start_link,[{'Elixir.Postgrex.Protocol',[{types,'Elixir.Postgrex.DefaultTypes'},{port,5432},{repo,'Elixir.ExchangeApi.Repo'},{telemetry_prefix,[exchange_api,repo]},{otp_app,exchange_api},{timeout,15000},{adapter,'Elixir.Ecto.Adapters.Postgres'},{username,<<"postgres">>},{password,<<"postgres">>},{database,<<"alchemist">>},{hostname,<<"localhost">>},{pool_size,<<"10">>},{pool,'Elixir.DBConnection.ConnectionPool'}]}]},'Elixir.Ecto.Adapters.Postgres',#{cache => #Ref<0.970357753.3214278657.6615>,opts => [{timeout,15000},{pool_size,<<"10">>},{pool,'Elixir.DBConnection.ConnectionPool'}],repo => 'Elixir.ExchangeApi.Repo',sql => 'Elixir.Ecto.Adapters.Postgres.Connection',telemetry => {'Elixir.ExchangeApi.Repo',debug,[exchange_api,repo,query]}}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       2020-08-26 15:05:16 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.843.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"ef14a242-bcb9-41d5-89bb-6e398cee8b24">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"04d3d0b3-3cf3-4c47-bd6e-e4c75b0f57ae">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62892},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.843.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"04d3d0b3-3cf3-4c47-bd6e-e4c75b0f57ae">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.842.0>,<0.736.0>,<0.735.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.694.0>]
    message_queue_len: 0
    messages: []
    links: [<0.842.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7WdS9o-Jh3YwcAAAeB">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 221267
  neighbours:
2020-08-26 15:05:16 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.842.0>, stream 1 had its request process <0.843.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"ef14a242-bcb9-41d5-89bb-6e398cee8b24">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"04d3d0b3-3cf3-4c47-bd6e-e4c75b0f57ae">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62892},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.843.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"04d3d0b3-3cf3-4c47-bd6e-e4c75b0f57ae">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:11:16 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.622.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"23e4301c-e590-4d63-8b47-f247f4233128">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"3e1d0bf6-4d4b-41e3-bd0a-c81e8d181aff">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62943},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"3e1d0bf6-4d4b-41e3-bd0a-c81e8d181aff">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.621.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.621.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7WyOApufgJv6MAAAAi">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 221125
  neighbours:
2020-08-26 15:11:16 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.621.0>, stream 1 had its request process <0.622.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"23e4301c-e590-4d63-8b47-f247f4233128">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"3e1d0bf6-4d4b-41e3-bd0a-c81e8d181aff">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62943},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"3e1d0bf6-4d4b-41e3-bd0a-c81e8d181aff">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:12:01 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.624.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"ebac76e2-6617-4c16-864c-b9e8b8f67b53">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"f103b715-e2cf-43bf-9ff1-5489cd0e14b3">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62943},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.624.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"f103b715-e2cf-43bf-9ff1-5489cd0e14b3">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.621.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.621.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7W01huTSAKUUMAAADk">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 220842
  neighbours:
2020-08-26 15:12:01 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.621.0>, stream 2 had its request process <0.624.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"ebac76e2-6617-4c16-864c-b9e8b8f67b53">>,id,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,6}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"f103b715-e2cf-43bf-9ff1-5489cd0e14b3">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62943},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.624.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"f103b715-e2cf-43bf-9ff1-5489cd0e14b3">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:14:07 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.680.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"b24f959c-6d87-45ba-b401-94d49de9b03b">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"746ff4c1-d139-4786-9770-0d2f5bf1c4d9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.680.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"746ff4c1-d139-4786-9770-0d2f5bf1c4d9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.679.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.679.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7W8LgLySB08GAAAAIE">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 220828
  neighbours:
2020-08-26 15:14:07 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.679.0>, stream 1 had its request process <0.680.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"b24f959c-6d87-45ba-b401-94d49de9b03b">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"746ff4c1-d139-4786-9770-0d2f5bf1c4d9">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.680.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"746ff4c1-d139-4786-9770-0d2f5bf1c4d9">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:14:52 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.743.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"fc036d9f-0616-4e10-a2d6-13f5968b8f2b">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2498022c-eceb-479c-aaca-8fde92f9513b">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.743.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2498022c-eceb-479c-aaca-8fde92f9513b">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.679.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.679.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7W-zC3-6C1QLsAAA5j">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 220821
  neighbours:
2020-08-26 15:14:52 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.679.0>, stream 2 had its request process <0.743.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"fc036d9f-0616-4e10-a2d6-13f5968b8f2b">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2498022c-eceb-479c-aaca-8fde92f9513b">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.743.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2498022c-eceb-479c-aaca-8fde92f9513b">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:15:24 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.802.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"8b88647a-3ec1-4b9c-a670-0384fb1462b7">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"654b29f2-80b7-4654-a57b-926bc67e3a7d">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.802.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"654b29f2-80b7-4654-a57b-926bc67e3a7d">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.679.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.679.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XAtG_BQDF1NkAAAUk">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 220691
  neighbours:
2020-08-26 15:15:24 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.679.0>, stream 3 had its request process <0.802.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"8b88647a-3ec1-4b9c-a670-0384fb1462b7">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,57}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"654b29f2-80b7-4654-a57b-926bc67e3a7d">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.802.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"654b29f2-80b7-4654-a57b-926bc67e3a7d">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:16:13 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.804.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2ba26ed5-7385-486f-a031-abbae3526299">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 4,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzA1NzMsImlhdCI6MTU5ODQ1MTM3MywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZTA5NjVkYmQtMGY5OC00ZDA1LWE3MTktNmEwMGQ4MTA2OTE2IiwibmJmIjoxNTk4NDUxMzcyLCJzdWIiOiI2MzcyNTA4ZS1kYjYxLTQ0MGEtOGY1OC00ZTA0Nzk3MjlmYmMiLCJ0eXAiOiJhY2Nlc3MifQ.pAGdhaDzFC6LGGwyHlF4Gv9fyCGDekU5AyduZPTD1Vtk5rCq_a8Xe_5Le9wo68fTXudNRsYr7RFb2IjpTMN-ig">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.804.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2ba26ed5-7385-486f-a031-abbae3526299">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7XDh0Tj8D-Lr0AABJj">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzA1NzMsImlhdCI6MTU5ODQ1MTM3MywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZTA5NjVkYmQtMGY5OC00ZDA1LWE3MTktNmEwMGQ4MTA2OTE2IiwibmJmIjoxNTk4NDUxMzcyLCJzdWIiOiI2MzcyNTA4ZS1kYjYxLTQ0MGEtOGY1OC00ZTA0Nzk3MjlmYmMiLCJ0eXAiOiJhY2Nlc3MifQ.pAGdhaDzFC6LGGwyHlF4Gv9fyCGDekU5AyduZPTD1Vtk5rCq_a8Xe_5Le9wo68fTXudNRsYr7RFb2IjpTMN-ig">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2ba26ed5-7385-486f-a031-abbae3526299">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 4,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.804.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2ba26ed5-7385-486f-a031-abbae3526299">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.679.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.679.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XDh0Tj8D-Lr0AABJj">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 418531
  neighbours:
2020-08-26 15:16:13 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.679.0>, stream 4 had its request process <0.804.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2ba26ed5-7385-486f-a031-abbae3526299">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 4,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzA1NzMsImlhdCI6MTU5ODQ1MTM3MywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZTA5NjVkYmQtMGY5OC00ZDA1LWE3MTktNmEwMGQ4MTA2OTE2IiwibmJmIjoxNTk4NDUxMzcyLCJzdWIiOiI2MzcyNTA4ZS1kYjYxLTQ0MGEtOGY1OC00ZTA0Nzk3MjlmYmMiLCJ0eXAiOiJhY2Nlc3MifQ.pAGdhaDzFC6LGGwyHlF4Gv9fyCGDekU5AyduZPTD1Vtk5rCq_a8Xe_5Le9wo68fTXudNRsYr7RFb2IjpTMN-ig">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.804.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2ba26ed5-7385-486f-a031-abbae3526299">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7XDh0Tj8D-Lr0AABJj">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzA1NzMsImlhdCI6MTU5ODQ1MTM3MywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZTA5NjVkYmQtMGY5OC00ZDA1LWE3MTktNmEwMGQ4MTA2OTE2IiwibmJmIjoxNTk4NDUxMzcyLCJzdWIiOiI2MzcyNTA4ZS1kYjYxLTQ0MGEtOGY1OC00ZTA0Nzk3MjlmYmMiLCJ0eXAiOiJhY2Nlc3MifQ.pAGdhaDzFC6LGGwyHlF4Gv9fyCGDekU5AyduZPTD1Vtk5rCq_a8Xe_5Le9wo68fTXudNRsYr7RFb2IjpTMN-ig">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"2ba26ed5-7385-486f-a031-abbae3526299">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62953},pid => <0.679.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 4,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.804.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"2ba26ed5-7385-486f-a031-abbae3526299">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:18:30 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.864.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => uuid,message => nil,term => #{'__struct__' => 'Elixir.Ecto.Changeset',action => nil,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"ef09f4c2-51fe-4387-beb1-e68a7ef9268c">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"uuid">> => <<"ef09f4c2-51fe-4387-beb1-e68a7ef9268c">>},prepare => [],repo => nil,repo_changes => #{},repo_opts => [],required => [email,jwt,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => false,validations => []}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,63}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"dc97c2a3-1907-42dc-bdee-825e16448c2a">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62979},pid => <0.863.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.864.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"dc97c2a3-1907-42dc-bdee-825e16448c2a">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.863.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.863.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XLe10ulgX8pIAACPB">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 221868
  neighbours:
2020-08-26 15:18:30 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.863.0>, stream 1 had its request process <0.864.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => uuid,message => nil,term => #{'__struct__' => 'Elixir.Ecto.Changeset',action => nil,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"ef09f4c2-51fe-4387-beb1-e68a7ef9268c">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"uuid">> => <<"ef09f4c2-51fe-4387-beb1-e68a7ef9268c">>},prepare => [],repo => nil,repo_changes => #{},repo_opts => [],required => [email,jwt,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => false,validations => []}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,63}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"dc97c2a3-1907-42dc-bdee-825e16448c2a">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62979},pid => <0.863.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.864.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"dc97c2a3-1907-42dc-bdee-825e16448c2a">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:18:48 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.927.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => uuid,message => nil,term => #{'__struct__' => 'Elixir.Ecto.Changeset',action => nil,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"c6a6c0d9-21f2-4d7f-9d1c-f2cfb26a1c6a">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"uuid">> => <<"c6a6c0d9-21f2-4d7f-9d1c-f2cfb26a1c6a">>},prepare => [],repo => nil,repo_changes => #{},repo_opts => [],required => [email,jwt,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => false,validations => []}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,63}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"dcd05863-40e1-4502-8aa4-d5bb1222ba9c">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62979},pid => <0.863.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.927.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"dcd05863-40e1-4502-8aa4-d5bb1222ba9c">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.863.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.863.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XMj6Qx0i-Dh0AAAiE">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 221953
  neighbours:
2020-08-26 15:18:48 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.863.0>, stream 2 had its request process <0.927.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => uuid,message => nil,term => #{'__struct__' => 'Elixir.Ecto.Changeset',action => nil,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"c6a6c0d9-21f2-4d7f-9d1c-f2cfb26a1c6a">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [{jwt,{<<"can't be blank">>,[{validation,required}]}}],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"uuid">> => <<"c6a6c0d9-21f2-4d7f-9d1c-f2cfb26a1c6a">>},prepare => [],repo => nil,repo_changes => #{},repo_opts => [],required => [email,jwt,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => false,validations => []}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,63}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"dcd05863-40e1-4502-8aa4-d5bb1222ba9c">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62979},pid => <0.863.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.927.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"dcd05863-40e1-4502-8aa4-d5bb1222ba9c">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:19:36 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.930.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => uuid,message => nil,term => #{'__struct__' => 'Elixir.Ecto.Changeset',action => nil,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"94823f86-2abd-4f18-83e1-6172df779089">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"uuid">> => <<"94823f86-2abd-4f18-83e1-6172df779089">>},prepare => [],repo => nil,repo_changes => #{},repo_opts => [],required => [email,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => true,validations => []}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,63}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"9817c6b6-c3bf-42e9-85f6-b3262387f8ef">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62979},pid => <0.863.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.930.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"9817c6b6-c3bf-42e9-85f6-b3262387f8ef">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.863.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.863.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XPVRcm8gg-SEAAAyk">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 221229
  neighbours:
2020-08-26 15:19:36 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.863.0>, stream 3 had its request process <0.930.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.KeyError',key => uuid,message => nil,term => #{'__struct__' => 'Elixir.Ecto.Changeset',action => nil,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"94823f86-2abd-4f18-83e1-6172df779089">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"uuid">> => <<"94823f86-2abd-4f18-83e1-6172df779089">>},prepare => [],repo => nil,repo_changes => #{},repo_opts => [],required => [email,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => true,validations => []}},[{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,63}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"9817c6b6-c3bf-42e9-85f6-b3262387f8ef">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62979},pid => <0.863.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.930.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"9817c6b6-c3bf-42e9-85f6-b3262387f8ef">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:24:00 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1005.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"a12a01dd-de01-460e-8ff0-40400ce007b2">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"0b77b453-1b68-4d1a-b6dd-d2094a11e2e4">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62998},pid => <0.987.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1005.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"0b77b453-1b68-4d1a-b6dd-d2094a11e2e4">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.987.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.987.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XeuhcVWCj-tMAABOk">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 220740
  neighbours:
2020-08-26 15:24:00 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.987.0>, stream 2 had its request process <0.1005.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.ArgumentError',message => <<"argument error">>},[{erlang,apply,[<<"a12a01dd-de01-460e-8ff0-40400ce007b2">>,uuid,[]],[]},{'Elixir.ExchangeApi.Guardian',subject_for_token,2,[{file,"lib/exchange_api/guardian.ex"},{line,5}]},{'Elixir.Guardian',returning_tuple,1,[{file,"lib/guardian.ex"},{line,756}]},{'Elixir.Guardian',encode_and_sign,4,[{file,"lib/guardian.ex"},{line,578}]},{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"0b77b453-1b68-4d1a-b6dd-d2094a11e2e4">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62998},pid => <0.987.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1005.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"0b77b453-1b68-4d1a-b6dd-d2094a11e2e4">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:24:43 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1068.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.MatchError',term => {error,reason_for_error}},[{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"616a36d1-ee6b-46a8-b8d4-c621a6c5bd0a">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62998},pid => <0.987.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1068.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"616a36d1-ee6b-46a8-b8d4-c621a6c5bd0a">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.987.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.987.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XhPqbUvhOeRoAABqD">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 118232
  neighbours:
2020-08-26 15:24:43 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.987.0>, stream 3 had its request process <0.1068.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.MatchError',term => {error,reason_for_error}},[{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"616a36d1-ee6b-46a8-b8d4-c621a6c5bd0a">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},62998},pid => <0.987.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1068.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"616a36d1-ee6b-46a8-b8d4-c621a6c5bd0a">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:26:02 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1128.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"8688114a-4485-4084-9780-af1684739ff7">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"jwt">> => <<>>,<<"uuid">> => <<"8688114a-4485-4084-9780-af1684739ff7">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"70990a4c-8439-4eb1-9767-a32db03ff606">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1128.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"70990a4c-8439-4eb1-9767-a32db03ff606">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1127.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1127.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7Xl0rjZbi_-K8AABoE">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 197099
  neighbours:
2020-08-26 15:26:02 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1127.0>, stream 1 had its request process <0.1128.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<"Jason.Encoder protocol must always be explicitly implemented.\n\nIf you own the struct, you can derive the implementation specifying which fields should be encoded to JSON:\n\n    @derive {Jason.Encoder, only: [....]}\n    defstruct ...\n\nIt is also possible to encode all fields, although this should be used carefully to avoid accidentally leaking private information when new fields are added:\n\n    @derive Jason.Encoder\n    defstruct ...\n\nFinally, if you don't own the struct you want to encode to JSON, you may use Protocol.derive/3 placed outside of any module:\n\n    Protocol.derive(Jason.Encoder, NameOfTheStruct, only: [...])\n    Protocol.derive(Jason.Encoder, NameOfTheStruct)\n">>,protocol => 'Elixir.Jason.Encoder',value => #{'__struct__' => 'Elixir.Ecto.Changeset',action => insert,changes => #{email => <<"pachedo@bar.com">>,uuid => <<"8688114a-4485-4084-9780-af1684739ff7">>},constraints => [#{constraint => <<"users_email_index">>,error_message => <<"has already been taken">>,error_type => unique,field => email,match => exact,type => unique}],data => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => built},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => nil,id => nil,inserted_at => nil,jwt => nil,updated_at => nil,uuid => nil},empty_values => [<<>>],errors => [{email,{<<"has already been taken">>,[{constraint,unique},{constraint_name,<<"users_email_index">>}]}}],filters => #{},params => #{<<"email">> => <<"pachedo@bar.com">>,<<"jwt">> => <<>>,<<"uuid">> => <<"8688114a-4485-4084-9780-af1684739ff7">>},prepare => [],repo => 'Elixir.ExchangeApi.Repo',repo_changes => #{},repo_opts => [],required => [email,uuid],types => #{email => string,id => id,inserted_at => naive_datetime,jwt => string,updated_at => naive_datetime,uuid => string},'valid?' => false,validations => []}},[{'Elixir.Jason','encode_to_iodata!',2,[{file,"lib/jason.ex"},{line,199}]},{'Elixir.Phoenix.Controller',json,2,[{file,"lib/phoenix/controller.ex"},{line,284}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"70990a4c-8439-4eb1-9767-a32db03ff606">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1128.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"70990a4c-8439-4eb1-9767-a32db03ff606">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:26:37 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1182.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.MatchError',term => {error,reason_for_error}},[{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"12f7916f-f764-48d8-9583-e81f1720f40e">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1182.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"12f7916f-f764-48d8-9583-e81f1720f40e">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1127.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1127.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7Xn3fPNWjUwK4AAEAB">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 118278
  neighbours:
2020-08-26 15:26:37 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1127.0>, stream 2 had its request process <0.1182.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.MatchError',term => {error,reason_for_error}},[{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"12f7916f-f764-48d8-9583-e81f1720f40e">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1182.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"12f7916f-f764-48d8-9583-e81f1720f40e">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:27:09 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.1237.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{jwt => nil,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1237.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7XpsYss1ANzGgAACTi">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => nil}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1237.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.1127.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.1127.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7XpsYss1ANzGgAACTi">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 402354
  neighbours:
2020-08-26 15:27:09 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.1127.0>, stream 3 had its request process <0.1237.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{jwt => nil,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1237.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7XpsYss1ANzGgAACTi">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => nil}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63014},pid => <0.1127.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 3,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.1237.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"b4fef5c0-1f3a-4ef7-b08b-46084b6fec29">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:35:42 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.649.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Postgrex.Error',connection_id => 75206,message => nil,postgres => #{code => undefined_table,file => <<"parse_relation.c">>,line => <<"1194">>,message => <<"relation \"users\" does not exist">>,pg_code => <<"42P01">>,position => <<"13">>,routine => <<"parserOpenTable">>,severity => <<"ERROR">>,unknown => <<"ERROR">>},query => <<"INSERT INTO \"users\" (\"email\",\"inserted_at\",\"updated_at\",\"id\") VALUES ($1,$2,$3,$4)">>},[{'Elixir.Ecto.Adapters.SQL',raise_sql_call_error,1,[{file,"lib/ecto/adapters/sql.ex"},{line,593}]},{'Elixir.Ecto.Repo.Schema',apply,4,[{file,"lib/ecto/repo/schema.ex"},{line,661}]},{'Elixir.Ecto.Repo.Schema','-do_insert/4-fun-1-',15,[{file,"lib/ecto/repo/schema.ex"},{line,263}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"93d5c963-15ff-4b89-ad3c-e342f0f2ca72">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63084},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.649.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"93d5c963-15ff-4b89-ad3c-e342f0f2ca72">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.621.0>,<0.515.0>,<0.514.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.621.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YHlmJG6i1Qd8AAALE">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 264173
  neighbours:
2020-08-26 15:35:42 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.621.0>, stream 2 had its request process <0.649.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Postgrex.Error',connection_id => 75206,message => nil,postgres => #{code => undefined_table,file => <<"parse_relation.c">>,line => <<"1194">>,message => <<"relation \"users\" does not exist">>,pg_code => <<"42P01">>,position => <<"13">>,routine => <<"parserOpenTable">>,severity => <<"ERROR">>,unknown => <<"ERROR">>},query => <<"INSERT INTO \"users\" (\"email\",\"inserted_at\",\"updated_at\",\"id\") VALUES ($1,$2,$3,$4)">>},[{'Elixir.Ecto.Adapters.SQL',raise_sql_call_error,1,[{file,"lib/ecto/adapters/sql.ex"},{line,593}]},{'Elixir.Ecto.Repo.Schema',apply,4,[{file,"lib/ecto/repo/schema.ex"},{line,661}]},{'Elixir.Ecto.Repo.Schema','-do_insert/4-fun-1-',15,[{file,"lib/ecto/repo/schema.ex"},{line,263}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"93d5c963-15ff-4b89-ad3c-e342f0f2ca72">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63084},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.649.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"93d5c963-15ff-4b89-ad3c-e342f0f2ca72">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:38:14 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.622.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"c92b8963-1e14-488b-9e1c-b765b700be6f">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63111},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => nil,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"c92b8963-1e14-488b-9e1c-b765b700be6f">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YQbRO4VgJv6MAAASB">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => nil}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"c92b8963-1e14-488b-9e1c-b765b700be6f">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63111},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"c92b8963-1e14-488b-9e1c-b765b700be6f">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.621.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.621.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YQbRO4VgJv6MAAASB">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 396617
  neighbours:
2020-08-26 15:38:14 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.621.0>, stream 1 had its request process <0.622.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"c92b8963-1e14-488b-9e1c-b765b700be6f">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63111},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => nil,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo2@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"c92b8963-1e14-488b-9e1c-b765b700be6f">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YQbRO4VgJv6MAAASB">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => nil}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"c92b8963-1e14-488b-9e1c-b765b700be6f">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63111},pid => <0.621.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.622.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"c92b8963-1e14-488b-9e1c-b765b700be6f">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:40:31 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.641.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.MatchError',term => {error,reason_for_error}},[{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"b96537c7-9777-4489-960b-3ab4eb6697b8">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63122},pid => <0.625.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.641.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"b96537c7-9777-4489-960b-3ab4eb6697b8">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.625.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.625.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YYYhpehBVR2QAAAXj">>}}]
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 28
    reductions: 118301
  neighbours:
2020-08-26 15:40:31 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.625.0>, stream 2 had its request process <0.641.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.MatchError',term => {error,reason_for_error}},[{'Elixir.ExchangeApi.Accounts',create_user,1,[{file,"lib/exchange_api/accounts.ex"},{line,58}]},{'Elixir.ExchangeApiWeb.UserController',create,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,16}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"b96537c7-9777-4489-960b-3ab4eb6697b8">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63122},pid => <0.625.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.641.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"b96537c7-9777-4489-960b-3ab4eb6697b8">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:41:51 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.701.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63134},pid => <0.700.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxMTEsImlhdCI6MTU5ODQ1MjkxMSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYzljZWM0OWEtZWFhNS00ZDFmLTlhYWEtZWE1OTFiYTBmY2RlIiwibmJmIjoxNTk4NDUyOTEwLCJzdWIiOiIzZmZjYTFlMS05YzRjLTQxODUtYWJiMy0yMDU2OTExOTRhZmYiLCJ0eXAiOiJhY2Nlc3MifQ.shS1uAY3Bx1VTY4Rngo_HFQ_ZkTXmZmkfvjJyNyeY_3q4E-H2NT0vllJbUA0MzXXnP8ms-uggL99XdHIJCrdUg">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.701.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YdEEWY2ioATMAAAZC">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxMTEsImlhdCI6MTU5ODQ1MjkxMSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYzljZWM0OWEtZWFhNS00ZDFmLTlhYWEtZWE1OTFiYTBmY2RlIiwibmJmIjoxNTk4NDUyOTEwLCJzdWIiOiIzZmZjYTFlMS05YzRjLTQxODUtYWJiMy0yMDU2OTExOTRhZmYiLCJ0eXAiOiJhY2Nlc3MifQ.shS1uAY3Bx1VTY4Rngo_HFQ_ZkTXmZmkfvjJyNyeY_3q4E-H2NT0vllJbUA0MzXXnP8ms-uggL99XdHIJCrdUg">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63134},pid => <0.700.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.701.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.700.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.700.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YdEEWY2ioATMAAAZC">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 419999
  neighbours:
2020-08-26 15:41:51 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.700.0>, stream 1 had its request process <0.701.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63134},pid => <0.700.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxMTEsImlhdCI6MTU5ODQ1MjkxMSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYzljZWM0OWEtZWFhNS00ZDFmLTlhYWEtZWE1OTFiYTBmY2RlIiwibmJmIjoxNTk4NDUyOTEwLCJzdWIiOiIzZmZjYTFlMS05YzRjLTQxODUtYWJiMy0yMDU2OTExOTRhZmYiLCJ0eXAiOiJhY2Nlc3MifQ.shS1uAY3Bx1VTY4Rngo_HFQ_ZkTXmZmkfvjJyNyeY_3q4E-H2NT0vllJbUA0MzXXnP8ms-uggL99XdHIJCrdUg">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.701.0>,params => #{<<"user">> => #{<<"email">> => <<"pachedo@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YdEEWY2ioATMAAAZC">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxMTEsImlhdCI6MTU5ODQ1MjkxMSwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYzljZWM0OWEtZWFhNS00ZDFmLTlhYWEtZWE1OTFiYTBmY2RlIiwibmJmIjoxNTk4NDUyOTEwLCJzdWIiOiIzZmZjYTFlMS05YzRjLTQxODUtYWJiMy0yMDU2OTExOTRhZmYiLCJ0eXAiOiJhY2Nlc3MifQ.shS1uAY3Bx1VTY4Rngo_HFQ_ZkTXmZmkfvjJyNyeY_3q4E-H2NT0vllJbUA0MzXXnP8ms-uggL99XdHIJCrdUg">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 46,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"46">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63134},pid => <0.700.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.701.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"46">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"32ed8dd7-c3d2-4942-995a-3b8111d6d1ba">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:42:54 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.761.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63152},pid => <0.760.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxNzQsImlhdCI6MTU5ODQ1Mjk3NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYjcwY2NkMjAtNzZkZi00NzJjLTg0OGUtYTVjNGZmODc2MTRmIiwibmJmIjoxNTk4NDUyOTczLCJzdWIiOiIwNTg4MzI4MC03ZTU4LTRkY2QtYjg0My1hOGRmYTFjZGQ2YmYiLCJ0eXAiOiJhY2Nlc3MifQ.B0Dtki0RRxidxpM7xznK8MWfzTHPN3P7azkOqq82MXF67HGBrDtp6umbBNgvhjK5fGXvbBXwROV6xJSftPbN6Q">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pached1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.761.0>,params => #{<<"user">> => #{<<"email">> => <<"pached1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YgvqGsQDO24QAAATk">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxNzQsImlhdCI6MTU5ODQ1Mjk3NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYjcwY2NkMjAtNzZkZi00NzJjLTg0OGUtYTVjNGZmODc2MTRmIiwibmJmIjoxNTk4NDUyOTczLCJzdWIiOiIwNTg4MzI4MC03ZTU4LTRkY2QtYjg0My1hOGRmYTFjZGQ2YmYiLCJ0eXAiOiJhY2Nlc3MifQ.B0Dtki0RRxidxpM7xznK8MWfzTHPN3P7azkOqq82MXF67HGBrDtp6umbBNgvhjK5fGXvbBXwROV6xJSftPbN6Q">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63152},pid => <0.760.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.761.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.760.0>,<0.516.0>,<0.515.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.473.0>]
    message_queue_len: 0
    messages: []
    links: [<0.760.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YgvqGsQDO24QAAATk">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 417854
  neighbours:
2020-08-26 15:42:54 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.760.0>, stream 1 had its request process <0.761.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63152},pid => <0.760.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxNzQsImlhdCI6MTU5ODQ1Mjk3NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYjcwY2NkMjAtNzZkZi00NzJjLTg0OGUtYTVjNGZmODc2MTRmIiwibmJmIjoxNTk4NDUyOTczLCJzdWIiOiIwNTg4MzI4MC03ZTU4LTRkY2QtYjg0My1hOGRmYTFjZGQ2YmYiLCJ0eXAiOiJhY2Nlc3MifQ.B0Dtki0RRxidxpM7xznK8MWfzTHPN3P7azkOqq82MXF67HGBrDtp6umbBNgvhjK5fGXvbBXwROV6xJSftPbN6Q">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"pached1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.761.0>,params => #{<<"user">> => #{<<"email">> => <<"pached1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YgvqGsQDO24QAAATk">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIxNzQsImlhdCI6MTU5ODQ1Mjk3NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiYjcwY2NkMjAtNzZkZi00NzJjLTg0OGUtYTVjNGZmODc2MTRmIiwibmJmIjoxNTk4NDUyOTczLCJzdWIiOiIwNTg4MzI4MC03ZTU4LTRkY2QtYjg0My1hOGRmYTFjZGQ2YmYiLCJ0eXAiOiJhY2Nlc3MifQ.B0Dtki0RRxidxpM7xznK8MWfzTHPN3P7azkOqq82MXF67HGBrDtp6umbBNgvhjK5fGXvbBXwROV6xJSftPbN6Q">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 47,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"47">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63152},pid => <0.760.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.761.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"47">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"0129ff52-5ce1-4f0a-a1dd-5194b5abbaa4">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:46:17 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.843.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 49,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"49">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIzNzYsImlhdCI6MTU5ODQ1MzE3NiwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNTczZGE4YWUtNjFhMy00MDk0LWEzZWEtNzc2NDhhYTEyNzI3IiwibmJmIjoxNTk4NDUzMTc1LCJzdWIiOiIwNDUyMzlkMC1kMTMwLTQ4MWEtODQ1Yy1lNjQ3Y2NkOTMzMGQiLCJ0eXAiOiJhY2Nlc3MifQ.hgIaRh2heZuZwhcMBUfccM-b4g8Le4anxVionjTMhXYqoMcqGgpSRx1-nbB0uK3uCw1c98jAXa3xaOsCAYu5-w">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"22pached1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.843.0>,params => #{<<"user">> => #{<<"email">> => <<"22pached1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"49">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YsgJ4hYB3YwcAABCC">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIzNzYsImlhdCI6MTU5ODQ1MzE3NiwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNTczZGE4YWUtNjFhMy00MDk0LWEzZWEtNzc2NDhhYTEyNzI3IiwibmJmIjoxNTk4NDUzMTc1LCJzdWIiOiIwNDUyMzlkMC1kMTMwLTQ4MWEtODQ1Yy1lNjQ3Y2NkOTMzMGQiLCJ0eXAiOiJhY2Nlc3MifQ.hgIaRh2heZuZwhcMBUfccM-b4g8Le4anxVionjTMhXYqoMcqGgpSRx1-nbB0uK3uCw1c98jAXa3xaOsCAYu5-w">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 49,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"49">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.843.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"49">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.842.0>,<0.736.0>,<0.735.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.694.0>]
    message_queue_len: 0
    messages: []
    links: [<0.842.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YsgJ4hYB3YwcAABCC">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 419995
  neighbours:
2020-08-26 15:46:17 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.842.0>, stream 1 had its request process <0.843.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 49,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"49">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIzNzYsImlhdCI6MTU5ODQ1MzE3NiwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNTczZGE4YWUtNjFhMy00MDk0LWEzZWEtNzc2NDhhYTEyNzI3IiwibmJmIjoxNTk4NDUzMTc1LCJzdWIiOiIwNDUyMzlkMC1kMTMwLTQ4MWEtODQ1Yy1lNjQ3Y2NkOTMzMGQiLCJ0eXAiOiJhY2Nlc3MifQ.hgIaRh2heZuZwhcMBUfccM-b4g8Le4anxVionjTMhXYqoMcqGgpSRx1-nbB0uK3uCw1c98jAXa3xaOsCAYu5-w">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"22pached1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.843.0>,params => #{<<"user">> => #{<<"email">> => <<"22pached1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"49">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YsgJ4hYB3YwcAABCC">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzIzNzYsImlhdCI6MTU5ODQ1MzE3NiwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNTczZGE4YWUtNjFhMy00MDk0LWEzZWEtNzc2NDhhYTEyNzI3IiwibmJmIjoxNTk4NDUzMTc1LCJzdWIiOiIwNDUyMzlkMC1kMTMwLTQ4MWEtODQ1Yy1lNjQ3Y2NkOTMzMGQiLCJ0eXAiOiJhY2Nlc3MifQ.hgIaRh2heZuZwhcMBUfccM-b4g8Le4anxVionjTMhXYqoMcqGgpSRx1-nbB0uK3uCw1c98jAXa3xaOsCAYu5-w">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 49,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"49">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 1,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.843.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"49">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"be2a58ae-fe04-4a49-85b8-6394a764f4c1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:47:17 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.855.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Template.UndefinedError',assigns => #{conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI0MzcsImlhdCI6MTU5ODQ1MzIzNywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDQxYWRhNjUtYmZhNi00NjljLWEwMTEtMjQ3NGRmYjNmMDcwIiwibmJmIjoxNTk4NDUzMjM2LCJzdWIiOiI4ZDcwZGIwYS00ZDQ4LTRmNDktYjQxNS0zODliNjgyN2EzZmUiLCJ0eXAiOiJhY2Nlc3MifQ.Ku3LceRbn92gwqQOmnfz4HgFcFlMyaf660wgeyqZbhxpes8H7EFQCPcemGl6R1_Uz3R9gE68nGrpBlqrsa1ECw">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"222pached1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.855.0>,params => #{<<"user">> => #{<<"email">> => <<"222pached1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.json">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YwDYMIiLbwzAAABOE">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI0MzcsImlhdCI6MTU5ODQ1MzIzNywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDQxYWRhNjUtYmZhNi00NjljLWEwMTEtMjQ3NGRmYjNmMDcwIiwibmJmIjoxNTk4NDUzMjM2LCJzdWIiOiI4ZDcwZGIwYS00ZDQ4LTRmNDktYjQxNS0zODliNjgyN2EzZmUiLCJ0eXAiOiJhY2Nlc3MifQ.Ku3LceRbn92gwqQOmnfz4HgFcFlMyaf660wgeyqZbhxpes8H7EFQCPcemGl6R1_Uz3R9gE68nGrpBlqrsa1ECw">>,view_module => 'Elixir.ExchangeApiWeb.UserView',view_template => <<"user.json">>},available => [],module => 'Elixir.ExchangeApiWeb.UserView',pattern => <<"*">>,root => <<"lib/exchange_api_web/templates/user">>,template => <<"user.json">>},[{'Elixir.Phoenix.Template',raise_template_not_found,3,[{file,"lib/phoenix/template.ex"},{line,337}]},{'Elixir.Phoenix.View',render_to_iodata,3,[{file,"lib/phoenix/view.ex"},{line,472}]},{'Elixir.Phoenix.Controller',render_and_send,4,[{file,"lib/phoenix/controller.ex"},{line,776}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.855.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.842.0>,<0.736.0>,<0.735.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.694.0>]
    message_queue_len: 0
    messages: []
    links: [<0.842.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7YwDYMIiLbwzAAABOE">>}}]
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 28
    reductions: 306980
  neighbours:
2020-08-26 15:47:17 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.842.0>, stream 2 had its request process <0.855.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.Phoenix.Template.UndefinedError',assigns => #{conn => #{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI0MzcsImlhdCI6MTU5ODQ1MzIzNywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDQxYWRhNjUtYmZhNi00NjljLWEwMTEtMjQ3NGRmYjNmMDcwIiwibmJmIjoxNTk4NDUzMjM2LCJzdWIiOiI4ZDcwZGIwYS00ZDQ4LTRmNDktYjQxNS0zODliNjgyN2EzZmUiLCJ0eXAiOiJhY2Nlc3MifQ.Ku3LceRbn92gwqQOmnfz4HgFcFlMyaf660wgeyqZbhxpes8H7EFQCPcemGl6R1_Uz3R9gE68nGrpBlqrsa1ECw">>,layout => false},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"222pached1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.855.0>,params => #{<<"user">> => #{<<"email">> => <<"222pached1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.json">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7YwDYMIiLbwzAAABOE">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI0MzcsImlhdCI6MTU5ODQ1MzIzNywiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiZDQxYWRhNjUtYmZhNi00NjljLWEwMTEtMjQ3NGRmYjNmMDcwIiwibmJmIjoxNTk4NDUzMjM2LCJzdWIiOiI4ZDcwZGIwYS00ZDQ4LTRmNDktYjQxNS0zODliNjgyN2EzZmUiLCJ0eXAiOiJhY2Nlc3MifQ.Ku3LceRbn92gwqQOmnfz4HgFcFlMyaf660wgeyqZbhxpes8H7EFQCPcemGl6R1_Uz3R9gE68nGrpBlqrsa1ECw">>,view_module => 'Elixir.ExchangeApiWeb.UserView',view_template => <<"user.json">>},available => [],module => 'Elixir.ExchangeApiWeb.UserView',pattern => <<"*">>,root => <<"lib/exchange_api_web/templates/user">>,template => <<"user.json">>},[{'Elixir.Phoenix.Template',raise_template_not_found,3,[{file,"lib/phoenix/template.ex"},{line,337}]},{'Elixir.Phoenix.View',render_to_iodata,3,[{file,"lib/phoenix/view.ex"},{line,472}]},{'Elixir.Phoenix.Controller',render_and_send,4,[{file,"lib/phoenix/controller.ex"},{line,776}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 50,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"50">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 2,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.855.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"50">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"f19b3cb7-f6ae-4063-8d3a-c10f32147c8e">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
2020-08-26 15:49:04 =CRASH REPORT====
  crasher:
    initial call: cowboy_stream_h:request_process/3
    pid: <0.968.0>
    registered_name: []
    exception exit: {{{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 59,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"59">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"30a79d17-f067-4d6b-9221-50c19e805eb1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 5,version => 'HTTP/1.1'}},assigns => #{layout => false,user => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => loaded},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => <<"222pach333eddd333d1o@bar.com">>,id => <<"073f0736-1022-4273-b675-cdde1b79377b">>,inserted_at => #{'__struct__' => 'Elixir.NaiveDateTime',calendar => 'Elixir.Calendar.ISO',day => 26,hour => 14,microsecond => {0,0},minute => 49,month => 8,second => 4,year => 2020},jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI1NDQsImlhdCI6MTU5ODQ1MzM0NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNjM5Mzc2ZWUtMjk4Yi00MmMzLWIyZGEtNDY1NmFhYTA4MTQzIiwibmJmIjoxNTk4NDUzMzQzLCJzdWIiOiI3YWY5ZmVmNS1hNWY1LTQ4Y2YtOGNjNS02NTdiODk4Y2JhNjAiLCJ0eXAiOiJhY2Nlc3MifQ.S_0LRlF27JxnLwIS6c2mkmSlGcAV28QcZJcbQEsLg1U8Bcyd3WmB07KoBI1Zf_fEnjGTwRPn-2DL7GcGw7ccPQ">>,updated_at => #{'__struct__' => 'Elixir.NaiveDateTime',calendar => 'Elixir.Calendar.ISO',day => 26,hour => 14,microsecond => {0,0},minute => 49,month => 8,second => 4,year => 2020}}},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"222pach333eddd333d1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.968.0>,params => #{<<"user">> => #{<<"email">> => <<"222pach333eddd333d1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"59">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"30a79d17-f067-4d6b-9221-50c19e805eb1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7Y2P9v7HoNeEsAAB1h">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI1NDQsImlhdCI6MTU5ODQ1MzM0NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNjM5Mzc2ZWUtMjk4Yi00MmMzLWIyZGEtNDY1NmFhYTA4MTQzIiwibmJmIjoxNTk4NDUzMzQzLCJzdWIiOiI3YWY5ZmVmNS1hNWY1LTQ4Y2YtOGNjNS02NTdiODk4Y2JhNjAiLCJ0eXAiOiJhY2Nlc3MifQ.S_0LRlF27JxnLwIS6c2mkmSlGcAV28QcZJcbQEsLg1U8Bcyd3WmB07KoBI1Zf_fEnjGTwRPn-2DL7GcGw7ccPQ">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 59,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"59">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"30a79d17-f067-4d6b-9221-50c19e805eb1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 5,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.968.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"59">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"30a79d17-f067-4d6b-9221-50c19e805eb1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}},[]}
    ancestors: [<0.842.0>,<0.736.0>,<0.735.0>,'Elixir.ExchangeApiWeb.Endpoint','Elixir.ExchangeApi.Supervisor',<0.694.0>]
    message_queue_len: 0
    messages: []
    links: [<0.842.0>]
    dictionary: [{'$logger_metadata$',#{request_id => <<"Fi7Y2P9v7HoNeEsAAB1h">>}}]
    trap_exit: false
    status: running
    heap_size: 17731
    stack_size: 28
    reductions: 411886
  neighbours:
2020-08-26 15:49:04 =ERROR REPORT====
Ranch listener 'Elixir.ExchangeApiWeb.Endpoint.HTTP', connection process <0.842.0>, stream 5 had its request process <0.968.0> exit with reason {{#{'__exception__' => true,'__struct__' => 'Elixir.FunctionClauseError',args => nil,arity => 3,clauses => nil,function => resp,kind => nil,module => 'Elixir.Plug.Conn'},[{'Elixir.Plug.Conn',resp,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 59,cert => undefined,has_body => true,has_read_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"59">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"30a79d17-f067-4d6b-9221-50c19e805eb1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 5,version => 'HTTP/1.1'}},assigns => #{layout => false,user => #{'__meta__' => #{'__struct__' => 'Elixir.Ecto.Schema.Metadata',context => nil,prefix => nil,schema => 'Elixir.ExchangeApi.Accounts.User',source => <<"users">>,state => loaded},'__struct__' => 'Elixir.ExchangeApi.Accounts.User',email => <<"222pach333eddd333d1o@bar.com">>,id => <<"073f0736-1022-4273-b675-cdde1b79377b">>,inserted_at => #{'__struct__' => 'Elixir.NaiveDateTime',calendar => 'Elixir.Calendar.ISO',day => 26,hour => 14,microsecond => {0,0},minute => 49,month => 8,second => 4,year => 2020},jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI1NDQsImlhdCI6MTU5ODQ1MzM0NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNjM5Mzc2ZWUtMjk4Yi00MmMzLWIyZGEtNDY1NmFhYTA4MTQzIiwibmJmIjoxNTk4NDUzMzQzLCJzdWIiOiI3YWY5ZmVmNS1hNWY1LTQ4Y2YtOGNjNS02NTdiODk4Y2JhNjAiLCJ0eXAiOiJhY2Nlc3MifQ.S_0LRlF27JxnLwIS6c2mkmSlGcAV28QcZJcbQEsLg1U8Bcyd3WmB07KoBI1Zf_fEnjGTwRPn-2DL7GcGw7ccPQ">>,updated_at => #{'__struct__' => 'Elixir.NaiveDateTime',calendar => 'Elixir.Calendar.ISO',day => 26,hour => 14,microsecond => {0,0},minute => 49,month => 8,second => 4,year => 2020}}},before_send => [#Fun<Elixir.Plug.Telemetry.0.60895335>,#Fun<Elixir.Phoenix.LiveReloader.0.33293990>],body_params => #{<<"user">> => #{<<"email">> => <<"222pach333eddd333d1o@bar.com">>}},cookies => #{},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.968.0>,params => #{<<"user">> => #{<<"email">> => <<"222pach333eddd333d1o@bar.com">>}},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{'Elixir.ExchangeApiWeb.Router' => {[],#{}},phoenix_action => create,phoenix_controller => 'Elixir.ExchangeApiWeb.UserController',phoenix_endpoint => 'Elixir.ExchangeApiWeb.Endpoint',phoenix_format => <<"json">>,phoenix_layout => {'Elixir.ExchangeApiWeb.LayoutView',app},phoenix_request_logger => {<<"request_logger">>,<<"request_logger">>},phoenix_router => 'Elixir.ExchangeApiWeb.Router',phoenix_template => <<"user.jwt">>,phoenix_view => 'Elixir.ExchangeApiWeb.UserView',plug_session_fetch => #Fun<Elixir.Plug.Session.1.105793137>},query_params => #{},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"59">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"30a79d17-f067-4d6b-9221-50c19e805eb1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"content-type">>,<<"application/octet-stream; charset=utf-8">>},{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>},{<<"x-request-id">>,<<"Fi7Y2P9v7HoNeEsAAB1h">>}],scheme => http,script_name => [],secret_key_base => <<"Q7M5uE+1YBDZGeuuk462bNxTsEk1SW1yaY75DzP3DnCdn9KQN+Y2zbXI5aUY4AMz">>,state => unset,status => nil},200,#{jwt => <<"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJleGNoYW5nZV9hcGkiLCJleHAiOjE2MDA4NzI1NDQsImlhdCI6MTU5ODQ1MzM0NCwiaXNzIjoiZXhjaGFuZ2VfYXBpIiwianRpIjoiNjM5Mzc2ZWUtMjk4Yi00MmMzLWIyZGEtNDY1NmFhYTA4MTQzIiwibmJmIjoxNTk4NDUzMzQzLCJzdWIiOiI3YWY5ZmVmNS1hNWY1LTQ4Y2YtOGNjNS02NTdiODk4Y2JhNjAiLCJ0eXAiOiJhY2Nlc3MifQ.S_0LRlF27JxnLwIS6c2mkmSlGcAV28QcZJcbQEsLg1U8Bcyd3WmB07KoBI1Zf_fEnjGTwRPn-2DL7GcGw7ccPQ">>}],[{file,"lib/plug/conn.ex"},{line,580}]},{'Elixir.Plug.Conn',send_resp,3,[{file,"lib/plug/conn.ex"},{line,559}]},{'Elixir.ExchangeApiWeb.UserController',action,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.UserController',phoenix_controller_pipeline,2,[{file,"lib/exchange_api_web/controllers/user_controller.ex"},{line,1}]},{'Elixir.Phoenix.Router','__call__',2,[{file,"lib/phoenix/router.ex"},{line,352}]},{'Elixir.ExchangeApiWeb.Endpoint',plug_builder_call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.ExchangeApiWeb.Endpoint','call (overridable 3)',2,[{file,"lib/plug/debugger.ex"},{line,132}]},{'Elixir.ExchangeApiWeb.Endpoint',call,2,[{file,"lib/exchange_api_web/endpoint.ex"},{line,1}]},{'Elixir.Phoenix.Endpoint.Cowboy2Handler',init,4,[{file,"lib/phoenix/endpoint/cowboy2_handler.ex"},{line,65}]},{cowboy_handler,execute,2,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_handler.erl"},{line,37}]},{cowboy_stream_h,execute,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,300}]},{cowboy_stream_h,request_process,3,[{file,"/Users/lmpn/Desktop/yarilabs/exchange_api/deps/cowboy/src/cowboy_stream_h.erl"},{line,291}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,226}]}]},{'Elixir.ExchangeApiWeb.Endpoint',call,[#{'__struct__' => 'Elixir.Plug.Conn',adapter => {'Elixir.Plug.Cowboy.Conn',#{bindings => #{},body_length => 59,cert => undefined,has_body => true,headers => #{<<"accept">> => <<"*/*">>,<<"accept-encoding">> => <<"gzip, deflate, br">>,<<"connection">> => <<"keep-alive">>,<<"content-length">> => <<"59">>,<<"content-type">> => <<"application/json">>,<<"host">> => <<"localhost:4000">>,<<"postman-token">> => <<"30a79d17-f067-4d6b-9221-50c19e805eb1">>,<<"user-agent">> => <<"PostmanRuntime/7.26.3">>},host => <<"localhost">>,host_info => undefined,method => <<"POST">>,path => <<"/api/v1/access">>,path_info => undefined,peer => {{127,0,0,1},63184},pid => <0.842.0>,port => 4000,qs => <<>>,ref => 'Elixir.ExchangeApiWeb.Endpoint.HTTP',scheme => <<"http">>,sock => {{127,0,0,1},4000},streamid => 5,version => 'HTTP/1.1'}},assigns => #{},before_send => [],body_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => body_params},cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},halted => false,host => <<"localhost">>,method => <<"POST">>,owner => <0.968.0>,params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => params},path_info => [<<"api">>,<<"v1">>,<<"access">>],path_params => #{},port => 4000,private => #{},query_params => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => query_params},query_string => <<>>,remote_ip => {127,0,0,1},req_cookies => #{'__struct__' => 'Elixir.Plug.Conn.Unfetched',aspect => cookies},req_headers => [{<<"accept">>,<<"*/*">>},{<<"accept-encoding">>,<<"gzip, deflate, br">>},{<<"connection">>,<<"keep-alive">>},{<<"content-length">>,<<"59">>},{<<"content-type">>,<<"application/json">>},{<<"host">>,<<"localhost:4000">>},{<<"postman-token">>,<<"30a79d17-f067-4d6b-9221-50c19e805eb1">>},{<<"user-agent">>,<<"PostmanRuntime/7.26.3">>}],request_path => <<"/api/v1/access">>,resp_body => nil,resp_cookies => #{},resp_headers => [{<<"cache-control">>,<<"max-age=0, private, must-revalidate">>}],scheme => http,script_name => [],secret_key_base => nil,state => unset,status => nil},[]]}} and stacktrace []
